  ____________       _____________
 ____    |__( )_________  __/__  /________      __
____  /| |_  /__  ___/_  /_ __  /_  __ \_ | /| / /
___  ___ |  / _  /   _  __/ _  / / /_/ /_ |/ |/ /
 _/_/  |_/_/  /_/    /_/    /_/  \____/____/|__/
[[34m2023-11-25T16:32:34.289+0200[0m] {[34mexecutor_loader.py:[0m117} INFO[0m - Loaded executor: SequentialExecutor[0m
[[34m2023-11-25T16:32:34.401+0200[0m] {[34mscheduler_job_runner.py:[0m797} INFO[0m - Starting the scheduler[0m
[[34m2023-11-25T16:32:34.402+0200[0m] {[34mscheduler_job_runner.py:[0m804} INFO[0m - Processing each file at most -1 times[0m
[[34m2023-11-25T16:32:34.406+0200[0m] {[34mmanager.py:[0m166} INFO[0m - Launched DagFileProcessorManager with pid: 9805[0m
[[34m2023-11-25T16:32:34.407+0200[0m] {[34mscheduler_job_runner.py:[0m1605} INFO[0m - Adopting or resetting orphaned tasks for active dag runs[0m
[[34m2023-11-25T16:32:34.430+0200[0m] {[34mscheduler_job_runner.py:[0m1669} INFO[0m - Reset the following 2 orphaned TaskInstances:
	<TaskInstance: my_weather_dag.check_api manual__2023-11-25T14:30:52.019411+00:00 [queued]>
	<TaskInstance: my_weather_dag.check_api scheduled__2023-11-15T00:00:00+00:00 [running]>[0m
[[34m2023-11-25T16:32:35.222+0200[0m] {[34msettings.py:[0m61} INFO[0m - Configured default timezone Timezone('UTC')[0m
[2023-11-25T16:32:35.227+0200] {manager.py:410} WARNING - Because we cannot use more than 1 thread (parsing_processes = 2) when using sqlite. So we set parallelism to 1.
[[34m2023-11-25T16:32:36.540+0200[0m] {[34mdag.py:[0m3722} INFO[0m - Setting next_dagrun for my_weather_dag to 2023-11-18T00:00:00+00:00, run_after=2023-11-19T00:00:00+00:00[0m
[[34m2023-11-25T16:32:36.592+0200[0m] {[34mscheduler_job_runner.py:[0m413} INFO[0m - 4 tasks up for execution:
	<TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-17T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api scheduled__2023-11-15T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api scheduled__2023-11-16T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api manual__2023-11-25T14:30:52.019411+00:00 [scheduled]>[0m
[[34m2023-11-25T16:32:36.593+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 0/16 running and queued tasks[0m
[[34m2023-11-25T16:32:36.593+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 1/16 running and queued tasks[0m
[[34m2023-11-25T16:32:36.593+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 2/16 running and queued tasks[0m
[[34m2023-11-25T16:32:36.593+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 3/16 running and queued tasks[0m
[[34m2023-11-25T16:32:36.593+0200[0m] {[34mscheduler_job_runner.py:[0m592} INFO[0m - Setting the following tasks to queued state:
	<TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-17T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api scheduled__2023-11-15T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api scheduled__2023-11-16T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api manual__2023-11-25T14:30:52.019411+00:00 [scheduled]>[0m
[[34m2023-11-25T16:32:36.596+0200[0m] {[34mtaskinstance.py:[0m1441} WARNING[0m - cannot record scheduled_duration for task create_table_sqlite because previous state change time has not been saved[0m
[[34m2023-11-25T16:32:36.596+0200[0m] {[34mtaskinstance.py:[0m1441} WARNING[0m - cannot record scheduled_duration for task check_api because previous state change time has not been saved[0m
[[34m2023-11-25T16:32:36.596+0200[0m] {[34mtaskinstance.py:[0m1441} WARNING[0m - cannot record scheduled_duration for task check_api because previous state change time has not been saved[0m
[[34m2023-11-25T16:32:36.597+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='scheduled__2023-11-17T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 22 and queue default[0m
[[34m2023-11-25T16:32:36.597+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'scheduled__2023-11-17T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:32:36.597+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='scheduled__2023-11-15T00:00:00+00:00', try_number=2, map_index=-1) to executor with priority 21 and queue default[0m
[[34m2023-11-25T16:32:36.597+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-15T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:32:36.597+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='scheduled__2023-11-16T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 21 and queue default[0m
[[34m2023-11-25T16:32:36.597+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-16T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:32:36.597+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='manual__2023-11-25T14:30:52.019411+00:00', try_number=1, map_index=-1) to executor with priority 21 and queue default[0m
[[34m2023-11-25T16:32:36.597+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'manual__2023-11-25T14:30:52.019411+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:32:36.599+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'scheduled__2023-11-17T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:32:37.324+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:32:37.502+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:32:37.503+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:32:37.648+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:32:37.734+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=scheduled__2023-11-17T00:00:00+00:00/task_id=create_table_sqlite permission to 509
[[34m2023-11-25T16:32:37.751+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-17T00:00:00+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:32:38.304+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-15T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:32:38.940+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:32:39.106+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:32:39.106+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:32:39.192+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:32:39.293+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:32:39.308+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.check_api scheduled__2023-11-15T00:00:00+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:35:50.428+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-16T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:35:51.133+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:35:51.316+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:35:51.316+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:35:51.442+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:35:51.532+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:35:51.540+0200[0m] {[34mcli.py:[0m241} WARNING[0m - Dag 'my_weather_dag' not found in path /Users/nazar/airflow/dags/my_weather_dag.py; trying path /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:35:51.540+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:35:51.555+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:35:51.556+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:35:51.591+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:35:51.614+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:35:51.836+0200[0m] {[34msequential_executor.py:[0m81} ERROR[0m - Failed to execute task Command '['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-16T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py']' returned non-zero exit status 1..[0m
[[34m2023-11-25T16:35:51.837+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'manual__2023-11-25T14:30:52.019411+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:35:52.535+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:35:52.726+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:35:52.730+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:35:52.892+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:35:52.967+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:35:52.975+0200[0m] {[34mcli.py:[0m241} WARNING[0m - Dag 'my_weather_dag' not found in path /Users/nazar/airflow/dags/my_weather_dag.py; trying path /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:35:52.975+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:35:52.994+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:35:52.994+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:35:53.034+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:35:53.063+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:35:53.320+0200[0m] {[34msequential_executor.py:[0m81} ERROR[0m - Failed to execute task Command '['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'manual__2023-11-25T14:30:52.019411+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py']' returned non-zero exit status 1..[0m
[[34m2023-11-25T16:35:53.321+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='scheduled__2023-11-17T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:35:53.322+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='scheduled__2023-11-15T00:00:00+00:00', try_number=2, map_index=-1)[0m
[[34m2023-11-25T16:35:53.322+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state failed for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='scheduled__2023-11-16T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:35:53.322+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state failed for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='manual__2023-11-25T14:30:52.019411+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:35:53.334+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=create_table_sqlite, run_id=scheduled__2023-11-17T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:32:37.888267+00:00, run_end_date=2023-11-25 14:32:38.053516+00:00, run_duration=0.165249, state=success, executor_state=success, try_number=1, max_tries=0, job_id=60, pool=default_pool, queue=default, priority_weight=22, operator=SQLExecuteQueryOperator, queued_dttm=2023-11-25 14:32:36.594327+00:00, queued_by_job_id=59, pid=9810[0m
[[34m2023-11-25T16:35:53.335+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=check_api, run_id=manual__2023-11-25T14:30:52.019411+00:00, map_index=-1, run_start_date=None, run_end_date=None, run_duration=None, state=None, executor_state=failed, try_number=1, max_tries=0, job_id=None, pool=default_pool, queue=default, priority_weight=21, operator=HttpSensor, queued_dttm=2023-11-25 14:34:46.031458+00:00, queued_by_job_id=None, pid=None[0m
[[34m2023-11-25T16:35:53.335+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=check_api, run_id=scheduled__2023-11-16T00:00:00+00:00, map_index=-1, run_start_date=None, run_end_date=None, run_duration=None, state=None, executor_state=failed, try_number=1, max_tries=0, job_id=None, pool=default_pool, queue=default, priority_weight=21, operator=HttpSensor, queued_dttm=2023-11-25 14:34:46.031458+00:00, queued_by_job_id=None, pid=None[0m
[[34m2023-11-25T16:35:53.335+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=check_api, run_id=scheduled__2023-11-15T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:32:39.393503+00:00, run_end_date=None, run_duration=None, state=None, executor_state=success, try_number=2, max_tries=0, job_id=61, pool=default_pool, queue=default, priority_weight=21, operator=HttpSensor, queued_dttm=2023-11-25 14:34:46.031458+00:00, queued_by_job_id=None, pid=9812[0m
[[34m2023-11-25T16:35:53.354+0200[0m] {[34mmanager.py:[0m302} ERROR[0m - DagFileProcessorManager (PID=9805) last sent a heartbeat 196.84 seconds ago! Restarting it[0m
[[34m2023-11-25T16:35:53.359+0200[0m] {[34mprocess_utils.py:[0m131} INFO[0m - Sending 15 to group 9805. PIDs of all processes in the group: [9805][0m
[[34m2023-11-25T16:35:53.359+0200[0m] {[34mprocess_utils.py:[0m86} INFO[0m - Sending the signal 15 to group 9805[0m
[[34m2023-11-25T16:35:53.610+0200[0m] {[34mprocess_utils.py:[0m79} INFO[0m - Process psutil.Process(pid=9805, status='terminated', exitcode=0, started='16:32:34') (9805) terminated with exit code 0[0m
[[34m2023-11-25T16:35:53.619+0200[0m] {[34mmanager.py:[0m166} INFO[0m - Launched DagFileProcessorManager with pid: 9891[0m
[[34m2023-11-25T16:35:54.542+0200[0m] {[34msettings.py:[0m61} INFO[0m - Configured default timezone Timezone('UTC')[0m
[2023-11-25T16:35:54.552+0200] {manager.py:410} WARNING - Because we cannot use more than 1 thread (parsing_processes = 2) when using sqlite. So we set parallelism to 1.
[[34m2023-11-25T16:35:56.382+0200[0m] {[34mdag.py:[0m3722} INFO[0m - Setting next_dagrun for weather_dag to 2023-11-25T00:00:00+00:00, run_after=2023-11-26T00:00:00+00:00[0m
[[34m2023-11-25T16:35:56.474+0200[0m] {[34mscheduler_job_runner.py:[0m413} INFO[0m - 1 tasks up for execution:
	<TaskInstance: weather_dag.create_table_sqlite scheduled__2023-11-24T00:00:00+00:00 [scheduled]>[0m
[[34m2023-11-25T16:35:56.474+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG weather_dag has 2/16 running and queued tasks[0m
[[34m2023-11-25T16:35:56.474+0200[0m] {[34mscheduler_job_runner.py:[0m592} INFO[0m - Setting the following tasks to queued state:
	<TaskInstance: weather_dag.create_table_sqlite scheduled__2023-11-24T00:00:00+00:00 [scheduled]>[0m
[[34m2023-11-25T16:35:56.476+0200[0m] {[34mtaskinstance.py:[0m1441} WARNING[0m - cannot record scheduled_duration for task create_table_sqlite because previous state change time has not been saved[0m
[[34m2023-11-25T16:35:56.476+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='weather_dag', task_id='create_table_sqlite', run_id='scheduled__2023-11-24T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 22 and queue default[0m
[[34m2023-11-25T16:35:56.477+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'weather_dag', 'create_table_sqlite', 'scheduled__2023-11-24T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:35:56.479+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'weather_dag', 'create_table_sqlite', 'scheduled__2023-11-24T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:35:57.327+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:35:57.553+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:35:57.553+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:35:57.710+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:35:57.806+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=weather_dag/run_id=scheduled__2023-11-24T00:00:00+00:00/task_id=create_table_sqlite permission to 509
[[34m2023-11-25T16:35:57.836+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: weather_dag.create_table_sqlite scheduled__2023-11-24T00:00:00+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:35:58.770+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='weather_dag', task_id='create_table_sqlite', run_id='scheduled__2023-11-24T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:35:58.778+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=weather_dag, task_id=create_table_sqlite, run_id=scheduled__2023-11-24T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:35:57.953870+00:00, run_end_date=2023-11-25 14:35:58.109356+00:00, run_duration=0.155486, state=failed, executor_state=success, try_number=1, max_tries=0, job_id=73, pool=default_pool, queue=default, priority_weight=22, operator=SqliteOperator, queued_dttm=2023-11-25 14:35:56.474970+00:00, queued_by_job_id=59, pid=9899[0m
[[34m2023-11-25T16:35:59.862+0200[0m] {[34mdag.py:[0m3722} INFO[0m - Setting next_dagrun for my_weather_dag to 2023-11-20T00:00:00+00:00, run_after=2023-11-21T00:00:00+00:00[0m
[[34m2023-11-25T16:35:59.985+0200[0m] {[34mscheduler_job_runner.py:[0m413} INFO[0m - 7 tasks up for execution:
	<TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-18T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-19T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.create_table_sqlite manual__2023-11-25T14:35:58.205237+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api scheduled__2023-11-15T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api scheduled__2023-11-16T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api scheduled__2023-11-17T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api manual__2023-11-25T14:30:52.019411+00:00 [scheduled]>[0m
[[34m2023-11-25T16:35:59.985+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 0/16 running and queued tasks[0m
[[34m2023-11-25T16:35:59.985+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 1/16 running and queued tasks[0m
[[34m2023-11-25T16:35:59.985+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 2/16 running and queued tasks[0m
[[34m2023-11-25T16:35:59.985+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 3/16 running and queued tasks[0m
[[34m2023-11-25T16:35:59.985+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 4/16 running and queued tasks[0m
[[34m2023-11-25T16:35:59.985+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 5/16 running and queued tasks[0m
[[34m2023-11-25T16:35:59.985+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 6/16 running and queued tasks[0m
[[34m2023-11-25T16:35:59.985+0200[0m] {[34mscheduler_job_runner.py:[0m592} INFO[0m - Setting the following tasks to queued state:
	<TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-18T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-19T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.create_table_sqlite manual__2023-11-25T14:35:58.205237+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api scheduled__2023-11-15T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api scheduled__2023-11-16T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api scheduled__2023-11-17T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api manual__2023-11-25T14:30:52.019411+00:00 [scheduled]>[0m
[[34m2023-11-25T16:35:59.986+0200[0m] {[34mtaskinstance.py:[0m1441} WARNING[0m - cannot record scheduled_duration for task create_table_sqlite because previous state change time has not been saved[0m
[[34m2023-11-25T16:35:59.986+0200[0m] {[34mtaskinstance.py:[0m1441} WARNING[0m - cannot record scheduled_duration for task create_table_sqlite because previous state change time has not been saved[0m
[[34m2023-11-25T16:35:59.986+0200[0m] {[34mtaskinstance.py:[0m1441} WARNING[0m - cannot record scheduled_duration for task create_table_sqlite because previous state change time has not been saved[0m
[[34m2023-11-25T16:35:59.986+0200[0m] {[34mtaskinstance.py:[0m1441} WARNING[0m - cannot record scheduled_duration for task check_api because previous state change time has not been saved[0m
[[34m2023-11-25T16:35:59.987+0200[0m] {[34mtaskinstance.py:[0m1441} WARNING[0m - cannot record scheduled_duration for task check_api because previous state change time has not been saved[0m
[[34m2023-11-25T16:35:59.987+0200[0m] {[34mtaskinstance.py:[0m1441} WARNING[0m - cannot record scheduled_duration for task check_api because previous state change time has not been saved[0m
[[34m2023-11-25T16:35:59.987+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='scheduled__2023-11-18T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 22 and queue default[0m
[[34m2023-11-25T16:35:59.987+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'scheduled__2023-11-18T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:35:59.987+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='scheduled__2023-11-19T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 22 and queue default[0m
[[34m2023-11-25T16:35:59.987+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'scheduled__2023-11-19T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:35:59.987+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='manual__2023-11-25T14:35:58.205237+00:00', try_number=1, map_index=-1) to executor with priority 22 and queue default[0m
[[34m2023-11-25T16:35:59.987+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'manual__2023-11-25T14:35:58.205237+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:35:59.987+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='scheduled__2023-11-15T00:00:00+00:00', try_number=3, map_index=-1) to executor with priority 21 and queue default[0m
[[34m2023-11-25T16:35:59.987+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-15T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:35:59.987+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='scheduled__2023-11-16T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 21 and queue default[0m
[[34m2023-11-25T16:35:59.987+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-16T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:35:59.987+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='scheduled__2023-11-17T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 21 and queue default[0m
[[34m2023-11-25T16:35:59.987+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-17T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:35:59.987+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='manual__2023-11-25T14:30:52.019411+00:00', try_number=1, map_index=-1) to executor with priority 21 and queue default[0m
[[34m2023-11-25T16:35:59.987+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'manual__2023-11-25T14:30:52.019411+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:35:59.988+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'scheduled__2023-11-18T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:36:00.762+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:36:01.018+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:36:01.019+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:36:01.183+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:36:01.289+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:36:01.297+0200[0m] {[34mcli.py:[0m241} WARNING[0m - Dag 'my_weather_dag' not found in path /Users/nazar/airflow/dags/my_weather_dag.py; trying path /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:36:01.297+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:36:01.327+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:36:01.327+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:36:01.403+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:36:01.479+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:36:01.739+0200[0m] {[34msequential_executor.py:[0m81} ERROR[0m - Failed to execute task Command '['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'scheduled__2023-11-18T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py']' returned non-zero exit status 1..[0m
[[34m2023-11-25T16:36:01.740+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'scheduled__2023-11-19T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:36:02.530+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:36:02.721+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:36:02.722+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:36:02.861+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:36:02.964+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:36:02.983+0200[0m] {[34mcli.py:[0m241} WARNING[0m - Dag 'my_weather_dag' not found in path /Users/nazar/airflow/dags/my_weather_dag.py; trying path /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:36:02.983+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:36:03.015+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:36:03.016+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:36:03.093+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:36:03.111+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:36:03.355+0200[0m] {[34msequential_executor.py:[0m81} ERROR[0m - Failed to execute task Command '['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'scheduled__2023-11-19T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py']' returned non-zero exit status 1..[0m
[[34m2023-11-25T16:36:03.356+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'manual__2023-11-25T14:35:58.205237+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:36:04.040+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:36:04.268+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:36:04.271+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:36:04.417+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:36:04.483+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:36:04.496+0200[0m] {[34mcli.py:[0m241} WARNING[0m - Dag 'my_weather_dag' not found in path /Users/nazar/airflow/dags/my_weather_dag.py; trying path /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:36:04.496+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:36:04.522+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:36:04.523+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:36:04.563+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:36:04.580+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:36:04.864+0200[0m] {[34msequential_executor.py:[0m81} ERROR[0m - Failed to execute task Command '['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'manual__2023-11-25T14:35:58.205237+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py']' returned non-zero exit status 1..[0m
[[34m2023-11-25T16:36:04.864+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-15T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:36:05.566+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:36:05.790+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:36:05.791+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:36:05.925+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:36:06.071+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:36:06.113+0200[0m] {[34mcli.py:[0m241} WARNING[0m - Dag 'my_weather_dag' not found in path /Users/nazar/airflow/dags/my_weather_dag.py; trying path /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:36:06.114+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:36:06.138+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:36:06.139+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:36:06.183+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:36:06.199+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:36:06.429+0200[0m] {[34msequential_executor.py:[0m81} ERROR[0m - Failed to execute task Command '['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-15T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py']' returned non-zero exit status 1..[0m
[[34m2023-11-25T16:36:06.430+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-16T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:36:07.159+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:36:07.390+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:36:07.390+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:36:07.500+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:36:07.630+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:36:07.650+0200[0m] {[34mcli.py:[0m241} WARNING[0m - Dag 'my_weather_dag' not found in path /Users/nazar/airflow/dags/my_weather_dag.py; trying path /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:36:07.650+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:36:07.700+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:36:07.700+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:36:07.739+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:36:07.782+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:36:08.064+0200[0m] {[34msequential_executor.py:[0m81} ERROR[0m - Failed to execute task Command '['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-16T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py']' returned non-zero exit status 1..[0m
[[34m2023-11-25T16:36:08.065+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-17T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:36:08.798+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:36:09.008+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:36:09.009+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:36:09.121+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:36:09.235+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:36:09.244+0200[0m] {[34mcli.py:[0m241} WARNING[0m - Dag 'my_weather_dag' not found in path /Users/nazar/airflow/dags/my_weather_dag.py; trying path /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:36:09.244+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:36:09.266+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:36:09.266+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:36:09.314+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:36:09.351+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:36:09.627+0200[0m] {[34msequential_executor.py:[0m81} ERROR[0m - Failed to execute task Command '['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-17T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py']' returned non-zero exit status 1..[0m
[[34m2023-11-25T16:36:09.628+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'manual__2023-11-25T14:30:52.019411+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:36:10.382+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:36:10.622+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:36:10.623+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:36:10.801+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:36:10.879+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:36:10.897+0200[0m] {[34mcli.py:[0m241} WARNING[0m - Dag 'my_weather_dag' not found in path /Users/nazar/airflow/dags/my_weather_dag.py; trying path /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:36:10.898+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:36:10.918+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:36:10.918+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:36:10.978+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:36:11.009+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:36:11.242+0200[0m] {[34msequential_executor.py:[0m81} ERROR[0m - Failed to execute task Command '['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'manual__2023-11-25T14:30:52.019411+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py']' returned non-zero exit status 1..[0m
[[34m2023-11-25T16:36:11.243+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state failed for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='scheduled__2023-11-18T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:36:11.244+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state failed for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='scheduled__2023-11-19T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:36:11.244+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state failed for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='manual__2023-11-25T14:35:58.205237+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:36:11.244+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state failed for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='scheduled__2023-11-15T00:00:00+00:00', try_number=3, map_index=-1)[0m
[[34m2023-11-25T16:36:11.245+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state failed for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='scheduled__2023-11-16T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:36:11.245+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state failed for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='scheduled__2023-11-17T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:36:11.245+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state failed for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='manual__2023-11-25T14:30:52.019411+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:36:11.284+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=check_api, run_id=manual__2023-11-25T14:30:52.019411+00:00, map_index=-1, run_start_date=None, run_end_date=None, run_duration=None, state=queued, executor_state=failed, try_number=1, max_tries=0, job_id=None, pool=default_pool, queue=default, priority_weight=21, operator=HttpSensor, queued_dttm=2023-11-25 14:35:59.985867+00:00, queued_by_job_id=59, pid=None[0m
[[34m2023-11-25T16:36:11.284+0200[0m] {[34mscheduler_job_runner.py:[0m770} ERROR[0m - Executor reports task instance <TaskInstance: my_weather_dag.check_api manual__2023-11-25T14:30:52.019411+00:00 [queued]> finished (failed) although the task says it's queued. (Info: None) Was the task killed externally?[0m
[[34m2023-11-25T16:36:11.285+0200[0m] {[34mtaskinstance.py:[0m1939} ERROR[0m - Executor reports task instance <TaskInstance: my_weather_dag.check_api manual__2023-11-25T14:30:52.019411+00:00 [queued]> finished (failed) although the task says it's queued. (Info: None) Was the task killed externally?[0m
[[34m2023-11-25T16:36:11.288+0200[0m] {[34mtaskinstance.py:[0m1400} INFO[0m - Marking task as FAILED. dag_id=my_weather_dag, task_id=check_api, execution_date=20231125T143052, start_date=, end_date=20231125T143611[0m
[[34m2023-11-25T16:36:11.293+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=create_table_sqlite, run_id=scheduled__2023-11-18T00:00:00+00:00, map_index=-1, run_start_date=None, run_end_date=None, run_duration=None, state=queued, executor_state=failed, try_number=1, max_tries=0, job_id=None, pool=default_pool, queue=default, priority_weight=22, operator=SQLExecuteQueryOperator, queued_dttm=2023-11-25 14:35:59.985867+00:00, queued_by_job_id=59, pid=None[0m
[[34m2023-11-25T16:36:11.293+0200[0m] {[34mscheduler_job_runner.py:[0m770} ERROR[0m - Executor reports task instance <TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-18T00:00:00+00:00 [queued]> finished (failed) although the task says it's queued. (Info: None) Was the task killed externally?[0m
[[34m2023-11-25T16:36:11.294+0200[0m] {[34mtaskinstance.py:[0m1939} ERROR[0m - Executor reports task instance <TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-18T00:00:00+00:00 [queued]> finished (failed) although the task says it's queued. (Info: None) Was the task killed externally?[0m
[[34m2023-11-25T16:36:11.300+0200[0m] {[34mtaskinstance.py:[0m1400} INFO[0m - Marking task as FAILED. dag_id=my_weather_dag, task_id=create_table_sqlite, execution_date=20231118T000000, start_date=, end_date=20231125T143611[0m
[[34m2023-11-25T16:36:11.304+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=create_table_sqlite, run_id=manual__2023-11-25T14:35:58.205237+00:00, map_index=-1, run_start_date=None, run_end_date=None, run_duration=None, state=queued, executor_state=failed, try_number=1, max_tries=0, job_id=None, pool=default_pool, queue=default, priority_weight=22, operator=SQLExecuteQueryOperator, queued_dttm=2023-11-25 14:35:59.985867+00:00, queued_by_job_id=59, pid=None[0m
[[34m2023-11-25T16:36:11.304+0200[0m] {[34mscheduler_job_runner.py:[0m770} ERROR[0m - Executor reports task instance <TaskInstance: my_weather_dag.create_table_sqlite manual__2023-11-25T14:35:58.205237+00:00 [queued]> finished (failed) although the task says it's queued. (Info: None) Was the task killed externally?[0m
[[34m2023-11-25T16:36:11.320+0200[0m] {[34mtaskinstance.py:[0m1939} ERROR[0m - Executor reports task instance <TaskInstance: my_weather_dag.create_table_sqlite manual__2023-11-25T14:35:58.205237+00:00 [queued]> finished (failed) although the task says it's queued. (Info: None) Was the task killed externally?[0m
[[34m2023-11-25T16:36:11.326+0200[0m] {[34mtaskinstance.py:[0m1400} INFO[0m - Marking task as FAILED. dag_id=my_weather_dag, task_id=create_table_sqlite, execution_date=20231125T143558, start_date=, end_date=20231125T143611[0m
[[34m2023-11-25T16:36:11.330+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=check_api, run_id=scheduled__2023-11-15T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:32:39.393503+00:00, run_end_date=None, run_duration=None, state=queued, executor_state=failed, try_number=3, max_tries=0, job_id=61, pool=default_pool, queue=default, priority_weight=21, operator=HttpSensor, queued_dttm=2023-11-25 14:35:59.985867+00:00, queued_by_job_id=59, pid=9812[0m
[[34m2023-11-25T16:36:11.330+0200[0m] {[34mscheduler_job_runner.py:[0m770} ERROR[0m - Executor reports task instance <TaskInstance: my_weather_dag.check_api scheduled__2023-11-15T00:00:00+00:00 [queued]> finished (failed) although the task says it's queued. (Info: None) Was the task killed externally?[0m
[[34m2023-11-25T16:36:11.332+0200[0m] {[34mtaskinstance.py:[0m1939} ERROR[0m - Executor reports task instance <TaskInstance: my_weather_dag.check_api scheduled__2023-11-15T00:00:00+00:00 [queued]> finished (failed) although the task says it's queued. (Info: None) Was the task killed externally?[0m
[[34m2023-11-25T16:36:11.337+0200[0m] {[34mtaskinstance.py:[0m1400} INFO[0m - Marking task as FAILED. dag_id=my_weather_dag, task_id=check_api, execution_date=20231115T000000, start_date=20231125T143239, end_date=20231125T143611[0m
[[34m2023-11-25T16:36:11.340+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=create_table_sqlite, run_id=scheduled__2023-11-19T00:00:00+00:00, map_index=-1, run_start_date=None, run_end_date=None, run_duration=None, state=queued, executor_state=failed, try_number=1, max_tries=0, job_id=None, pool=default_pool, queue=default, priority_weight=22, operator=SQLExecuteQueryOperator, queued_dttm=2023-11-25 14:35:59.985867+00:00, queued_by_job_id=59, pid=None[0m
[[34m2023-11-25T16:36:11.340+0200[0m] {[34mscheduler_job_runner.py:[0m770} ERROR[0m - Executor reports task instance <TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-19T00:00:00+00:00 [queued]> finished (failed) although the task says it's queued. (Info: None) Was the task killed externally?[0m
[[34m2023-11-25T16:36:11.341+0200[0m] {[34mtaskinstance.py:[0m1939} ERROR[0m - Executor reports task instance <TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-19T00:00:00+00:00 [queued]> finished (failed) although the task says it's queued. (Info: None) Was the task killed externally?[0m
[[34m2023-11-25T16:36:11.346+0200[0m] {[34mtaskinstance.py:[0m1400} INFO[0m - Marking task as FAILED. dag_id=my_weather_dag, task_id=create_table_sqlite, execution_date=20231119T000000, start_date=, end_date=20231125T143611[0m
[[34m2023-11-25T16:36:11.348+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=check_api, run_id=scheduled__2023-11-17T00:00:00+00:00, map_index=-1, run_start_date=None, run_end_date=None, run_duration=None, state=queued, executor_state=failed, try_number=1, max_tries=0, job_id=None, pool=default_pool, queue=default, priority_weight=21, operator=HttpSensor, queued_dttm=2023-11-25 14:35:59.985867+00:00, queued_by_job_id=59, pid=None[0m
[[34m2023-11-25T16:36:11.348+0200[0m] {[34mscheduler_job_runner.py:[0m770} ERROR[0m - Executor reports task instance <TaskInstance: my_weather_dag.check_api scheduled__2023-11-17T00:00:00+00:00 [queued]> finished (failed) although the task says it's queued. (Info: None) Was the task killed externally?[0m
[[34m2023-11-25T16:36:11.350+0200[0m] {[34mtaskinstance.py:[0m1939} ERROR[0m - Executor reports task instance <TaskInstance: my_weather_dag.check_api scheduled__2023-11-17T00:00:00+00:00 [queued]> finished (failed) although the task says it's queued. (Info: None) Was the task killed externally?[0m
[[34m2023-11-25T16:36:11.354+0200[0m] {[34mtaskinstance.py:[0m1400} INFO[0m - Marking task as FAILED. dag_id=my_weather_dag, task_id=check_api, execution_date=20231117T000000, start_date=, end_date=20231125T143611[0m
[[34m2023-11-25T16:36:11.357+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=check_api, run_id=scheduled__2023-11-16T00:00:00+00:00, map_index=-1, run_start_date=None, run_end_date=None, run_duration=None, state=queued, executor_state=failed, try_number=1, max_tries=0, job_id=None, pool=default_pool, queue=default, priority_weight=21, operator=HttpSensor, queued_dttm=2023-11-25 14:35:59.985867+00:00, queued_by_job_id=59, pid=None[0m
[[34m2023-11-25T16:36:11.358+0200[0m] {[34mscheduler_job_runner.py:[0m770} ERROR[0m - Executor reports task instance <TaskInstance: my_weather_dag.check_api scheduled__2023-11-16T00:00:00+00:00 [queued]> finished (failed) although the task says it's queued. (Info: None) Was the task killed externally?[0m
[[34m2023-11-25T16:36:11.359+0200[0m] {[34mtaskinstance.py:[0m1939} ERROR[0m - Executor reports task instance <TaskInstance: my_weather_dag.check_api scheduled__2023-11-16T00:00:00+00:00 [queued]> finished (failed) although the task says it's queued. (Info: None) Was the task killed externally?[0m
[[34m2023-11-25T16:36:11.363+0200[0m] {[34mtaskinstance.py:[0m1400} INFO[0m - Marking task as FAILED. dag_id=my_weather_dag, task_id=check_api, execution_date=20231116T000000, start_date=, end_date=20231125T143611[0m
[[34m2023-11-25T16:36:14.770+0200[0m] {[34mdagrun.py:[0m632} ERROR[0m - Marking run <DagRun my_weather_dag @ 2023-11-20 00:00:00+00:00: scheduled__2023-11-20T00:00:00+00:00, state:running, queued_at: 2023-11-25 14:36:00.949194+00:00. externally triggered: False> failed[0m
[[34m2023-11-25T16:36:14.770+0200[0m] {[34mdagrun.py:[0m704} INFO[0m - DagRun Finished: dag_id=my_weather_dag, execution_date=2023-11-20 00:00:00+00:00, run_id=scheduled__2023-11-20T00:00:00+00:00, run_start_date=2023-11-25 14:36:00.962616+00:00, run_end_date=2023-11-25 14:36:14.770846+00:00, run_duration=13.80823, state=failed, external_trigger=False, run_type=scheduled, data_interval_start=2023-11-20 00:00:00+00:00, data_interval_end=2023-11-21 00:00:00+00:00, dag_hash=94d8e49e6293cd8a565ed3d87bfbddbb[0m
[[34m2023-11-25T16:36:14.777+0200[0m] {[34mdag.py:[0m3722} INFO[0m - Setting next_dagrun for my_weather_dag to 2023-11-21T00:00:00+00:00, run_after=2023-11-22T00:00:00+00:00[0m
[[34m2023-11-25T16:36:16.866+0200[0m] {[34mdag.py:[0m3722} INFO[0m - Setting next_dagrun for my_weather_dag to 2023-11-23T00:00:00+00:00, run_after=2023-11-24T00:00:00+00:00[0m
[[34m2023-11-25T16:36:16.880+0200[0m] {[34mdagrun.py:[0m632} ERROR[0m - Marking run <DagRun my_weather_dag @ 2023-11-22 00:00:00+00:00: scheduled__2023-11-22T00:00:00+00:00, state:running, queued_at: 2023-11-25 14:36:06.475140+00:00. externally triggered: False> failed[0m
[[34m2023-11-25T16:36:16.880+0200[0m] {[34mdagrun.py:[0m704} INFO[0m - DagRun Finished: dag_id=my_weather_dag, execution_date=2023-11-22 00:00:00+00:00, run_id=scheduled__2023-11-22T00:00:00+00:00, run_start_date=2023-11-25 14:36:06.484668+00:00, run_end_date=2023-11-25 14:36:16.880721+00:00, run_duration=10.396053, state=failed, external_trigger=False, run_type=scheduled, data_interval_start=2023-11-22 00:00:00+00:00, data_interval_end=2023-11-23 00:00:00+00:00, dag_hash=94d8e49e6293cd8a565ed3d87bfbddbb[0m
[[34m2023-11-25T16:36:16.883+0200[0m] {[34mdag.py:[0m3722} INFO[0m - Setting next_dagrun for my_weather_dag to 2023-11-23T00:00:00+00:00, run_after=2023-11-24T00:00:00+00:00[0m
[[34m2023-11-25T16:36:16.898+0200[0m] {[34mdagrun.py:[0m632} ERROR[0m - Marking run <DagRun my_weather_dag @ 2023-11-25 14:30:52.019411+00:00: manual__2023-11-25T14:30:52.019411+00:00, state:running, queued_at: 2023-11-25 14:30:52.036588+00:00. externally triggered: True> failed[0m
[[34m2023-11-25T16:36:16.898+0200[0m] {[34mdagrun.py:[0m704} INFO[0m - DagRun Finished: dag_id=my_weather_dag, execution_date=2023-11-25 14:30:52.019411+00:00, run_id=manual__2023-11-25T14:30:52.019411+00:00, run_start_date=2023-11-25 14:30:53.766859+00:00, run_end_date=2023-11-25 14:36:16.898627+00:00, run_duration=323.131768, state=failed, external_trigger=True, run_type=manual, data_interval_start=2023-11-24 00:00:00+00:00, data_interval_end=2023-11-25 00:00:00+00:00, dag_hash=94d8e49e6293cd8a565ed3d87bfbddbb[0m
[[34m2023-11-25T16:36:16.901+0200[0m] {[34mdagrun.py:[0m632} ERROR[0m - Marking run <DagRun my_weather_dag @ 2023-11-15 00:00:00+00:00: scheduled__2023-11-15T00:00:00+00:00, state:running, queued_at: 2023-11-25 14:30:53.754073+00:00. externally triggered: False> failed[0m
[[34m2023-11-25T16:36:16.901+0200[0m] {[34mdagrun.py:[0m704} INFO[0m - DagRun Finished: dag_id=my_weather_dag, execution_date=2023-11-15 00:00:00+00:00, run_id=scheduled__2023-11-15T00:00:00+00:00, run_start_date=2023-11-25 14:30:53.766778+00:00, run_end_date=2023-11-25 14:36:16.901078+00:00, run_duration=323.1343, state=failed, external_trigger=False, run_type=scheduled, data_interval_start=2023-11-15 00:00:00+00:00, data_interval_end=2023-11-16 00:00:00+00:00, dag_hash=94d8e49e6293cd8a565ed3d87bfbddbb[0m
[[34m2023-11-25T16:36:16.902+0200[0m] {[34mdag.py:[0m3722} INFO[0m - Setting next_dagrun for my_weather_dag to 2023-11-16T00:00:00+00:00, run_after=2023-11-17T00:00:00+00:00[0m
[[34m2023-11-25T16:36:16.904+0200[0m] {[34mdagrun.py:[0m632} ERROR[0m - Marking run <DagRun my_weather_dag @ 2023-11-16 00:00:00+00:00: scheduled__2023-11-16T00:00:00+00:00, state:running, queued_at: 2023-11-25 14:30:58.184011+00:00. externally triggered: False> failed[0m
[[34m2023-11-25T16:36:16.904+0200[0m] {[34mdagrun.py:[0m704} INFO[0m - DagRun Finished: dag_id=my_weather_dag, execution_date=2023-11-16 00:00:00+00:00, run_id=scheduled__2023-11-16T00:00:00+00:00, run_start_date=2023-11-25 14:30:58.195250+00:00, run_end_date=2023-11-25 14:36:16.904809+00:00, run_duration=318.709559, state=failed, external_trigger=False, run_type=scheduled, data_interval_start=2023-11-16 00:00:00+00:00, data_interval_end=2023-11-17 00:00:00+00:00, dag_hash=94d8e49e6293cd8a565ed3d87bfbddbb[0m
[[34m2023-11-25T16:36:16.905+0200[0m] {[34mdag.py:[0m3722} INFO[0m - Setting next_dagrun for my_weather_dag to 2023-11-17T00:00:00+00:00, run_after=2023-11-18T00:00:00+00:00[0m
[[34m2023-11-25T16:36:16.906+0200[0m] {[34mdagrun.py:[0m632} ERROR[0m - Marking run <DagRun my_weather_dag @ 2023-11-17 00:00:00+00:00: scheduled__2023-11-17T00:00:00+00:00, state:running, queued_at: 2023-11-25 14:32:36.535632+00:00. externally triggered: False> failed[0m
[[34m2023-11-25T16:36:16.907+0200[0m] {[34mdagrun.py:[0m704} INFO[0m - DagRun Finished: dag_id=my_weather_dag, execution_date=2023-11-17 00:00:00+00:00, run_id=scheduled__2023-11-17T00:00:00+00:00, run_start_date=2023-11-25 14:32:36.548522+00:00, run_end_date=2023-11-25 14:36:16.907037+00:00, run_duration=220.358515, state=failed, external_trigger=False, run_type=scheduled, data_interval_start=2023-11-17 00:00:00+00:00, data_interval_end=2023-11-18 00:00:00+00:00, dag_hash=94d8e49e6293cd8a565ed3d87bfbddbb[0m
[[34m2023-11-25T16:36:16.907+0200[0m] {[34mdag.py:[0m3722} INFO[0m - Setting next_dagrun for my_weather_dag to 2023-11-18T00:00:00+00:00, run_after=2023-11-19T00:00:00+00:00[0m
[[34m2023-11-25T16:36:19.100+0200[0m] {[34mdag.py:[0m3722} INFO[0m - Setting next_dagrun for my_weather_dag to 2023-11-20T00:00:00+00:00, run_after=2023-11-21T00:00:00+00:00[0m
[[34m2023-11-25T16:37:04.721+0200[0m] {[34mscheduler_job_runner.py:[0m413} INFO[0m - 1 tasks up for execution:
	<TaskInstance: weather_dag.create_table_sqlite manual__2023-11-25T14:37:03.070338+00:00 [scheduled]>[0m
[[34m2023-11-25T16:37:04.722+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG weather_dag has 0/16 running and queued tasks[0m
[[34m2023-11-25T16:37:04.722+0200[0m] {[34mscheduler_job_runner.py:[0m592} INFO[0m - Setting the following tasks to queued state:
	<TaskInstance: weather_dag.create_table_sqlite manual__2023-11-25T14:37:03.070338+00:00 [scheduled]>[0m
[[34m2023-11-25T16:37:04.722+0200[0m] {[34mtaskinstance.py:[0m1441} WARNING[0m - cannot record scheduled_duration for task create_table_sqlite because previous state change time has not been saved[0m
[[34m2023-11-25T16:37:04.722+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='weather_dag', task_id='create_table_sqlite', run_id='manual__2023-11-25T14:37:03.070338+00:00', try_number=1, map_index=-1) to executor with priority 22 and queue default[0m
[[34m2023-11-25T16:37:04.722+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'weather_dag', 'create_table_sqlite', 'manual__2023-11-25T14:37:03.070338+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:37:04.723+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'weather_dag', 'create_table_sqlite', 'manual__2023-11-25T14:37:03.070338+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:37:05.475+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:37:05.684+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:37:05.685+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:37:05.832+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:37:05.898+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=weather_dag/run_id=manual__2023-11-25T14:37:03.070338+00:00/task_id=create_table_sqlite permission to 509
[[34m2023-11-25T16:37:05.920+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: weather_dag.create_table_sqlite manual__2023-11-25T14:37:03.070338+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:37:06.644+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='weather_dag', task_id='create_table_sqlite', run_id='manual__2023-11-25T14:37:03.070338+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:37:06.651+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=weather_dag, task_id=create_table_sqlite, run_id=manual__2023-11-25T14:37:03.070338+00:00, map_index=-1, run_start_date=2023-11-25 14:37:06.064187+00:00, run_end_date=2023-11-25 14:37:06.223221+00:00, run_duration=0.159034, state=failed, executor_state=success, try_number=1, max_tries=0, job_id=76, pool=default_pool, queue=default, priority_weight=22, operator=SqliteOperator, queued_dttm=2023-11-25 14:37:04.722194+00:00, queued_by_job_id=59, pid=9980[0m
[[34m2023-11-25T16:37:35.563+0200[0m] {[34mscheduler_job_runner.py:[0m1605} INFO[0m - Adopting or resetting orphaned tasks for active dag runs[0m
[2023-11-25T16:38:56.017+0200] {manager.py:543} INFO - DAG weather_dag is missing and will be deactivated.
[2023-11-25T16:38:56.020+0200] {manager.py:553} INFO - Deactivated 1 DAGs which are no longer present in file.
[2023-11-25T16:38:56.022+0200] {manager.py:557} INFO - Deleted DAG weather_dag in serialized_dag table
[[34m2023-11-25T16:42:36.031+0200[0m] {[34mscheduler_job_runner.py:[0m1605} INFO[0m - Adopting or resetting orphaned tasks for active dag runs[0m
[[34m2023-11-25T16:43:49.452+0200[0m] {[34mscheduler_job_runner.py:[0m413} INFO[0m - 13 tasks up for execution:
	<TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-15T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-16T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-17T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-18T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-19T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-20T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-21T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-22T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-23T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-24T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.create_table_sqlite manual__2023-11-25T14:30:52.019411+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.create_table_sqlite manual__2023-11-25T14:35:58.205237+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.create_table_sqlite manual__2023-11-25T14:43:48.651156+00:00 [scheduled]>[0m
[[34m2023-11-25T16:43:49.455+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 0/16 running and queued tasks[0m
[[34m2023-11-25T16:43:49.455+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 1/16 running and queued tasks[0m
[[34m2023-11-25T16:43:49.455+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 2/16 running and queued tasks[0m
[[34m2023-11-25T16:43:49.455+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 3/16 running and queued tasks[0m
[[34m2023-11-25T16:43:49.455+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 4/16 running and queued tasks[0m
[[34m2023-11-25T16:43:49.455+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 5/16 running and queued tasks[0m
[[34m2023-11-25T16:43:49.455+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 6/16 running and queued tasks[0m
[[34m2023-11-25T16:43:49.455+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 7/16 running and queued tasks[0m
[[34m2023-11-25T16:43:49.455+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 8/16 running and queued tasks[0m
[[34m2023-11-25T16:43:49.456+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 9/16 running and queued tasks[0m
[[34m2023-11-25T16:43:49.456+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 10/16 running and queued tasks[0m
[[34m2023-11-25T16:43:49.456+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 11/16 running and queued tasks[0m
[[34m2023-11-25T16:43:49.456+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 12/16 running and queued tasks[0m
[[34m2023-11-25T16:43:49.456+0200[0m] {[34mscheduler_job_runner.py:[0m592} INFO[0m - Setting the following tasks to queued state:
	<TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-15T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-16T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-17T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-18T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-19T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-20T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-21T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-22T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-23T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-24T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.create_table_sqlite manual__2023-11-25T14:30:52.019411+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.create_table_sqlite manual__2023-11-25T14:35:58.205237+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.create_table_sqlite manual__2023-11-25T14:43:48.651156+00:00 [scheduled]>[0m
[[34m2023-11-25T16:43:49.458+0200[0m] {[34mtaskinstance.py:[0m1441} WARNING[0m - cannot record scheduled_duration for task create_table_sqlite because previous state change time has not been saved[0m
[[34m2023-11-25T16:43:49.458+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='scheduled__2023-11-15T00:00:00+00:00', try_number=2, map_index=-1) to executor with priority 22 and queue default[0m
[[34m2023-11-25T16:43:49.458+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'scheduled__2023-11-15T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:43:49.458+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='scheduled__2023-11-16T00:00:00+00:00', try_number=2, map_index=-1) to executor with priority 22 and queue default[0m
[[34m2023-11-25T16:43:49.458+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'scheduled__2023-11-16T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:43:49.459+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='scheduled__2023-11-17T00:00:00+00:00', try_number=2, map_index=-1) to executor with priority 22 and queue default[0m
[[34m2023-11-25T16:43:49.459+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'scheduled__2023-11-17T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:43:49.459+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='scheduled__2023-11-18T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 22 and queue default[0m
[[34m2023-11-25T16:43:49.459+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'scheduled__2023-11-18T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:43:49.459+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='scheduled__2023-11-19T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 22 and queue default[0m
[[34m2023-11-25T16:43:49.459+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'scheduled__2023-11-19T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:43:49.459+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='scheduled__2023-11-20T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 22 and queue default[0m
[[34m2023-11-25T16:43:49.459+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'scheduled__2023-11-20T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:43:49.461+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='scheduled__2023-11-21T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 22 and queue default[0m
[[34m2023-11-25T16:43:49.461+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'scheduled__2023-11-21T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:43:49.461+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='scheduled__2023-11-22T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 22 and queue default[0m
[[34m2023-11-25T16:43:49.461+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'scheduled__2023-11-22T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:43:49.461+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='scheduled__2023-11-23T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 22 and queue default[0m
[[34m2023-11-25T16:43:49.461+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'scheduled__2023-11-23T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:43:49.461+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='scheduled__2023-11-24T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 22 and queue default[0m
[[34m2023-11-25T16:43:49.461+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'scheduled__2023-11-24T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:43:49.462+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='manual__2023-11-25T14:30:52.019411+00:00', try_number=2, map_index=-1) to executor with priority 22 and queue default[0m
[[34m2023-11-25T16:43:49.462+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'manual__2023-11-25T14:30:52.019411+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:43:49.462+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='manual__2023-11-25T14:35:58.205237+00:00', try_number=1, map_index=-1) to executor with priority 22 and queue default[0m
[[34m2023-11-25T16:43:49.462+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'manual__2023-11-25T14:35:58.205237+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:43:49.462+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='manual__2023-11-25T14:43:48.651156+00:00', try_number=1, map_index=-1) to executor with priority 22 and queue default[0m
[[34m2023-11-25T16:43:49.462+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'manual__2023-11-25T14:43:48.651156+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:43:49.463+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'scheduled__2023-11-15T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:43:50.308+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:43:50.527+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:43:50.528+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:43:50.743+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:43:50.818+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:43:50.977+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-15T00:00:00+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:43:51.834+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'scheduled__2023-11-16T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:43:52.757+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:43:52.959+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:43:52.959+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:43:53.103+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:43:53.193+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:43:53.223+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-16T00:00:00+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:43:54.109+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'scheduled__2023-11-17T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:43:54.894+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:43:55.069+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:43:55.069+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:43:55.184+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:43:55.288+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:43:55.312+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-17T00:00:00+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:43:56.052+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'scheduled__2023-11-18T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:43:56.762+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:43:56.907+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:43:56.908+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:43:57.006+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:43:57.095+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=scheduled__2023-11-18T00:00:00+00:00/task_id=create_table_sqlite permission to 509
[[34m2023-11-25T16:43:57.154+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-18T00:00:00+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:43:57.854+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'scheduled__2023-11-19T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:43:58.530+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:43:58.732+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:43:58.732+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:43:58.861+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:43:58.922+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=scheduled__2023-11-19T00:00:00+00:00/task_id=create_table_sqlite permission to 509
[[34m2023-11-25T16:43:58.937+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-19T00:00:00+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:43:59.608+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'scheduled__2023-11-20T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:44:00.261+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:44:00.451+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:44:00.451+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:44:00.594+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:44:00.668+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=scheduled__2023-11-20T00:00:00+00:00/task_id=create_table_sqlite permission to 509
[[34m2023-11-25T16:44:00.692+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-20T00:00:00+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:44:01.261+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'scheduled__2023-11-21T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:44:01.943+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:44:02.135+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:44:02.135+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:44:02.255+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:44:02.332+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=scheduled__2023-11-21T00:00:00+00:00/task_id=create_table_sqlite permission to 509
[[34m2023-11-25T16:44:02.355+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-21T00:00:00+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:44:03.149+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'scheduled__2023-11-22T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:44:03.817+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:44:03.991+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:44:03.992+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:44:04.107+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:44:04.188+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=scheduled__2023-11-22T00:00:00+00:00/task_id=create_table_sqlite permission to 509
[[34m2023-11-25T16:44:04.211+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-22T00:00:00+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:44:05.079+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'scheduled__2023-11-23T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:44:05.787+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:44:06.001+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:44:06.002+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:44:06.151+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:44:06.280+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=scheduled__2023-11-23T00:00:00+00:00/task_id=create_table_sqlite permission to 509
[[34m2023-11-25T16:44:06.304+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-23T00:00:00+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:44:06.929+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'scheduled__2023-11-24T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:44:07.793+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:44:08.000+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:44:08.000+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:44:08.187+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:44:08.256+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=scheduled__2023-11-24T00:00:00+00:00/task_id=create_table_sqlite permission to 509
[[34m2023-11-25T16:44:08.269+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.create_table_sqlite scheduled__2023-11-24T00:00:00+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:44:08.932+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'manual__2023-11-25T14:30:52.019411+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:44:09.616+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:44:09.790+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:44:09.790+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:44:09.963+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:44:10.064+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:44:10.081+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.create_table_sqlite manual__2023-11-25T14:30:52.019411+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:44:10.811+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'manual__2023-11-25T14:35:58.205237+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:44:11.388+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:44:11.561+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:44:11.562+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:44:11.684+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:44:11.742+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=manual__2023-11-25T14:35:58.205237+00:00/task_id=create_table_sqlite permission to 509
[[34m2023-11-25T16:44:11.762+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.create_table_sqlite manual__2023-11-25T14:35:58.205237+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:44:12.507+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'create_table_sqlite', 'manual__2023-11-25T14:43:48.651156+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:44:13.228+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:44:13.403+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:44:13.404+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:44:13.531+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:44:13.658+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=manual__2023-11-25T14:43:48.651156+00:00/task_id=create_table_sqlite permission to 509
[[34m2023-11-25T16:44:13.692+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.create_table_sqlite manual__2023-11-25T14:43:48.651156+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:44:14.419+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='scheduled__2023-11-15T00:00:00+00:00', try_number=2, map_index=-1)[0m
[[34m2023-11-25T16:44:14.420+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='scheduled__2023-11-16T00:00:00+00:00', try_number=2, map_index=-1)[0m
[[34m2023-11-25T16:44:14.421+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='scheduled__2023-11-17T00:00:00+00:00', try_number=2, map_index=-1)[0m
[[34m2023-11-25T16:44:14.421+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='scheduled__2023-11-18T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:44:14.421+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='scheduled__2023-11-19T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:44:14.421+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='scheduled__2023-11-20T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:44:14.421+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='scheduled__2023-11-21T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:44:14.421+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='scheduled__2023-11-22T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:44:14.421+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='scheduled__2023-11-23T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:44:14.421+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='scheduled__2023-11-24T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:44:14.421+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='manual__2023-11-25T14:30:52.019411+00:00', try_number=2, map_index=-1)[0m
[[34m2023-11-25T16:44:14.421+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='manual__2023-11-25T14:35:58.205237+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:44:14.421+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='create_table_sqlite', run_id='manual__2023-11-25T14:43:48.651156+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:44:14.426+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=create_table_sqlite, run_id=manual__2023-11-25T14:30:52.019411+00:00, map_index=-1, run_start_date=2023-11-25 14:44:10.192299+00:00, run_end_date=2023-11-25 14:44:10.589455+00:00, run_duration=0.397156, state=success, executor_state=success, try_number=2, max_tries=1, job_id=87, pool=default_pool, queue=default, priority_weight=22, operator=SQLExecuteQueryOperator, queued_dttm=2023-11-25 14:43:49.456675+00:00, queued_by_job_id=59, pid=10403[0m
[[34m2023-11-25T16:44:14.426+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=create_table_sqlite, run_id=manual__2023-11-25T14:35:58.205237+00:00, map_index=-1, run_start_date=2023-11-25 14:44:11.951347+00:00, run_end_date=2023-11-25 14:44:12.260885+00:00, run_duration=0.309538, state=success, executor_state=success, try_number=1, max_tries=0, job_id=88, pool=default_pool, queue=default, priority_weight=22, operator=SQLExecuteQueryOperator, queued_dttm=2023-11-25 14:43:49.456675+00:00, queued_by_job_id=59, pid=10405[0m
[[34m2023-11-25T16:44:14.426+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=create_table_sqlite, run_id=manual__2023-11-25T14:43:48.651156+00:00, map_index=-1, run_start_date=2023-11-25 14:44:13.813747+00:00, run_end_date=2023-11-25 14:44:14.167881+00:00, run_duration=0.354134, state=success, executor_state=success, try_number=1, max_tries=0, job_id=89, pool=default_pool, queue=default, priority_weight=22, operator=SQLExecuteQueryOperator, queued_dttm=2023-11-25 14:43:49.456675+00:00, queued_by_job_id=59, pid=10407[0m
[[34m2023-11-25T16:44:14.426+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=create_table_sqlite, run_id=scheduled__2023-11-15T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:43:51.076966+00:00, run_end_date=2023-11-25 14:43:51.499760+00:00, run_duration=0.422794, state=success, executor_state=success, try_number=2, max_tries=1, job_id=76, pool=default_pool, queue=default, priority_weight=22, operator=SQLExecuteQueryOperator, queued_dttm=2023-11-25 14:43:49.456675+00:00, queued_by_job_id=59, pid=10379[0m
[[34m2023-11-25T16:44:14.426+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=create_table_sqlite, run_id=scheduled__2023-11-16T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:43:53.310302+00:00, run_end_date=2023-11-25 14:43:53.781522+00:00, run_duration=0.47122, state=success, executor_state=success, try_number=2, max_tries=1, job_id=77, pool=default_pool, queue=default, priority_weight=22, operator=SQLExecuteQueryOperator, queued_dttm=2023-11-25 14:43:49.456675+00:00, queued_by_job_id=59, pid=10383[0m
[[34m2023-11-25T16:44:14.427+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=create_table_sqlite, run_id=scheduled__2023-11-17T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:43:55.442786+00:00, run_end_date=2023-11-25 14:43:55.732235+00:00, run_duration=0.289449, state=success, executor_state=success, try_number=2, max_tries=1, job_id=79, pool=default_pool, queue=default, priority_weight=22, operator=SQLExecuteQueryOperator, queued_dttm=2023-11-25 14:43:49.456675+00:00, queued_by_job_id=59, pid=10386[0m
[[34m2023-11-25T16:44:14.427+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=create_table_sqlite, run_id=scheduled__2023-11-18T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:43:57.284711+00:00, run_end_date=2023-11-25 14:43:57.582676+00:00, run_duration=0.297965, state=success, executor_state=success, try_number=1, max_tries=0, job_id=80, pool=default_pool, queue=default, priority_weight=22, operator=SQLExecuteQueryOperator, queued_dttm=2023-11-25 14:43:49.456675+00:00, queued_by_job_id=59, pid=10388[0m
[[34m2023-11-25T16:44:14.427+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=create_table_sqlite, run_id=scheduled__2023-11-19T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:43:59.057106+00:00, run_end_date=2023-11-25 14:43:59.306332+00:00, run_duration=0.249226, state=success, executor_state=success, try_number=1, max_tries=0, job_id=81, pool=default_pool, queue=default, priority_weight=22, operator=SQLExecuteQueryOperator, queued_dttm=2023-11-25 14:43:49.456675+00:00, queued_by_job_id=59, pid=10390[0m
[[34m2023-11-25T16:44:14.427+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=create_table_sqlite, run_id=scheduled__2023-11-20T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:44:00.817038+00:00, run_end_date=2023-11-25 14:44:01.033479+00:00, run_duration=0.216441, state=success, executor_state=success, try_number=1, max_tries=0, job_id=82, pool=default_pool, queue=default, priority_weight=22, operator=SQLExecuteQueryOperator, queued_dttm=2023-11-25 14:43:49.456675+00:00, queued_by_job_id=59, pid=10392[0m
[[34m2023-11-25T16:44:14.427+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=create_table_sqlite, run_id=scheduled__2023-11-21T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:44:02.461068+00:00, run_end_date=2023-11-25 14:44:02.796815+00:00, run_duration=0.335747, state=success, executor_state=success, try_number=1, max_tries=0, job_id=83, pool=default_pool, queue=default, priority_weight=22, operator=SQLExecuteQueryOperator, queued_dttm=2023-11-25 14:43:49.456675+00:00, queued_by_job_id=59, pid=10394[0m
[[34m2023-11-25T16:44:14.427+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=create_table_sqlite, run_id=scheduled__2023-11-22T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:44:04.293758+00:00, run_end_date=2023-11-25 14:44:04.757514+00:00, run_duration=0.463756, state=success, executor_state=success, try_number=1, max_tries=0, job_id=84, pool=default_pool, queue=default, priority_weight=22, operator=SQLExecuteQueryOperator, queued_dttm=2023-11-25 14:43:49.456675+00:00, queued_by_job_id=59, pid=10396[0m
[[34m2023-11-25T16:44:14.427+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=create_table_sqlite, run_id=scheduled__2023-11-23T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:44:06.440297+00:00, run_end_date=2023-11-25 14:44:06.601821+00:00, run_duration=0.161524, state=success, executor_state=success, try_number=1, max_tries=0, job_id=85, pool=default_pool, queue=default, priority_weight=22, operator=SQLExecuteQueryOperator, queued_dttm=2023-11-25 14:43:49.456675+00:00, queued_by_job_id=59, pid=10398[0m
[[34m2023-11-25T16:44:14.427+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=create_table_sqlite, run_id=scheduled__2023-11-24T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:44:08.367617+00:00, run_end_date=2023-11-25 14:44:08.597347+00:00, run_duration=0.22973, state=success, executor_state=success, try_number=1, max_tries=0, job_id=86, pool=default_pool, queue=default, priority_weight=22, operator=SQLExecuteQueryOperator, queued_dttm=2023-11-25 14:43:49.456675+00:00, queued_by_job_id=59, pid=10401[0m
[[34m2023-11-25T16:44:15.746+0200[0m] {[34mscheduler_job_runner.py:[0m413} INFO[0m - 12 tasks up for execution:
	<TaskInstance: my_weather_dag.check_api scheduled__2023-11-16T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api scheduled__2023-11-17T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api scheduled__2023-11-18T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api scheduled__2023-11-19T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api scheduled__2023-11-20T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api scheduled__2023-11-21T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api scheduled__2023-11-22T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api scheduled__2023-11-23T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api scheduled__2023-11-24T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api manual__2023-11-25T14:30:52.019411+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api manual__2023-11-25T14:35:58.205237+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api manual__2023-11-25T14:43:48.651156+00:00 [scheduled]>[0m
[[34m2023-11-25T16:44:15.747+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 1/16 running and queued tasks[0m
[[34m2023-11-25T16:44:15.747+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 2/16 running and queued tasks[0m
[[34m2023-11-25T16:44:15.747+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 3/16 running and queued tasks[0m
[[34m2023-11-25T16:44:15.747+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 4/16 running and queued tasks[0m
[[34m2023-11-25T16:44:15.747+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 5/16 running and queued tasks[0m
[[34m2023-11-25T16:44:15.747+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 6/16 running and queued tasks[0m
[[34m2023-11-25T16:44:15.747+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 7/16 running and queued tasks[0m
[[34m2023-11-25T16:44:15.747+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 8/16 running and queued tasks[0m
[[34m2023-11-25T16:44:15.747+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 9/16 running and queued tasks[0m
[[34m2023-11-25T16:44:15.747+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 10/16 running and queued tasks[0m
[[34m2023-11-25T16:44:15.748+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 11/16 running and queued tasks[0m
[[34m2023-11-25T16:44:15.748+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 12/16 running and queued tasks[0m
[[34m2023-11-25T16:44:15.748+0200[0m] {[34mscheduler_job_runner.py:[0m592} INFO[0m - Setting the following tasks to queued state:
	<TaskInstance: my_weather_dag.check_api scheduled__2023-11-16T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api scheduled__2023-11-17T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api scheduled__2023-11-18T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api scheduled__2023-11-19T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api scheduled__2023-11-20T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api scheduled__2023-11-21T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api scheduled__2023-11-22T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api scheduled__2023-11-23T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api scheduled__2023-11-24T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api manual__2023-11-25T14:30:52.019411+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api manual__2023-11-25T14:35:58.205237+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.check_api manual__2023-11-25T14:43:48.651156+00:00 [scheduled]>[0m
[[34m2023-11-25T16:44:15.749+0200[0m] {[34mtaskinstance.py:[0m1441} WARNING[0m - cannot record scheduled_duration for task check_api because previous state change time has not been saved[0m
[[34m2023-11-25T16:44:15.750+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='scheduled__2023-11-16T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 21 and queue default[0m
[[34m2023-11-25T16:44:15.750+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-16T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:44:15.750+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='scheduled__2023-11-17T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 21 and queue default[0m
[[34m2023-11-25T16:44:15.750+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-17T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:44:15.751+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='scheduled__2023-11-18T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 21 and queue default[0m
[[34m2023-11-25T16:44:15.751+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-18T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:44:15.751+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='scheduled__2023-11-19T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 21 and queue default[0m
[[34m2023-11-25T16:44:15.751+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-19T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:44:15.751+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='scheduled__2023-11-20T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 21 and queue default[0m
[[34m2023-11-25T16:44:15.751+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-20T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:44:15.751+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='scheduled__2023-11-21T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 21 and queue default[0m
[[34m2023-11-25T16:44:15.751+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-21T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:44:15.751+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='scheduled__2023-11-22T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 21 and queue default[0m
[[34m2023-11-25T16:44:15.751+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-22T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:44:15.752+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='scheduled__2023-11-23T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 21 and queue default[0m
[[34m2023-11-25T16:44:15.752+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-23T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:44:15.752+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='scheduled__2023-11-24T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 21 and queue default[0m
[[34m2023-11-25T16:44:15.752+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-24T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:44:15.752+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='manual__2023-11-25T14:30:52.019411+00:00', try_number=1, map_index=-1) to executor with priority 21 and queue default[0m
[[34m2023-11-25T16:44:15.752+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'manual__2023-11-25T14:30:52.019411+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:44:15.752+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='manual__2023-11-25T14:35:58.205237+00:00', try_number=1, map_index=-1) to executor with priority 21 and queue default[0m
[[34m2023-11-25T16:44:15.752+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'manual__2023-11-25T14:35:58.205237+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:44:15.752+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='manual__2023-11-25T14:43:48.651156+00:00', try_number=1, map_index=-1) to executor with priority 21 and queue default[0m
[[34m2023-11-25T16:44:15.752+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'manual__2023-11-25T14:43:48.651156+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:44:15.753+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-16T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:44:16.499+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:44:16.732+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:44:16.733+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:44:16.877+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:44:16.977+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=scheduled__2023-11-16T00:00:00+00:00/task_id=check_api permission to 509
[[34m2023-11-25T16:44:17.001+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.check_api scheduled__2023-11-16T00:00:00+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:48:23.286+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-17T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:24.057+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:48:24.271+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:48:24.272+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:24.420+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:24.547+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:48:24.939+0200[0m] {[34msequential_executor.py:[0m81} ERROR[0m - Failed to execute task Command '['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-17T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py']' returned non-zero exit status 1..[0m
[[34m2023-11-25T16:48:24.940+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-18T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:25.674+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:48:25.922+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:48:25.922+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:26.139+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:26.259+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:48:26.571+0200[0m] {[34msequential_executor.py:[0m81} ERROR[0m - Failed to execute task Command '['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-18T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py']' returned non-zero exit status 1..[0m
[[34m2023-11-25T16:48:26.572+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-19T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:27.242+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:48:27.721+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:48:27.721+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:27.910+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:28.022+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:48:28.300+0200[0m] {[34msequential_executor.py:[0m81} ERROR[0m - Failed to execute task Command '['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-19T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py']' returned non-zero exit status 1..[0m
[[34m2023-11-25T16:48:28.300+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-20T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:28.970+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:48:29.209+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:48:29.209+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:29.408+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:29.544+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:48:29.884+0200[0m] {[34msequential_executor.py:[0m81} ERROR[0m - Failed to execute task Command '['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-20T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py']' returned non-zero exit status 1..[0m
[[34m2023-11-25T16:48:29.885+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-21T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:30.742+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:48:31.005+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:48:31.006+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:31.212+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:31.337+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:48:31.615+0200[0m] {[34msequential_executor.py:[0m81} ERROR[0m - Failed to execute task Command '['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-21T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py']' returned non-zero exit status 1..[0m
[[34m2023-11-25T16:48:31.615+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-22T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:32.335+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:48:32.555+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:48:32.555+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:32.696+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:32.809+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:48:33.064+0200[0m] {[34msequential_executor.py:[0m81} ERROR[0m - Failed to execute task Command '['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-22T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py']' returned non-zero exit status 1..[0m
[[34m2023-11-25T16:48:33.065+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-23T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:33.648+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:48:33.886+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:48:33.887+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:34.024+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:34.118+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:48:34.504+0200[0m] {[34msequential_executor.py:[0m81} ERROR[0m - Failed to execute task Command '['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-23T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py']' returned non-zero exit status 1..[0m
[[34m2023-11-25T16:48:34.505+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-24T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:35.205+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:48:35.494+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:48:35.495+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:35.716+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:35.819+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:48:36.163+0200[0m] {[34msequential_executor.py:[0m81} ERROR[0m - Failed to execute task Command '['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'scheduled__2023-11-24T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py']' returned non-zero exit status 1..[0m
[[34m2023-11-25T16:48:36.164+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'manual__2023-11-25T14:30:52.019411+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:36.936+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:48:37.214+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:48:37.214+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:37.409+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:37.525+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:48:37.872+0200[0m] {[34msequential_executor.py:[0m81} ERROR[0m - Failed to execute task Command '['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'manual__2023-11-25T14:30:52.019411+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py']' returned non-zero exit status 1..[0m
[[34m2023-11-25T16:48:37.873+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'manual__2023-11-25T14:35:58.205237+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:38.610+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:48:38.864+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:48:38.864+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:39.026+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:39.170+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:48:39.428+0200[0m] {[34msequential_executor.py:[0m81} ERROR[0m - Failed to execute task Command '['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'manual__2023-11-25T14:35:58.205237+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py']' returned non-zero exit status 1..[0m
[[34m2023-11-25T16:48:39.429+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'manual__2023-11-25T14:43:48.651156+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:40.231+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:48:40.376+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:48:40.376+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:40.455+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:40.515+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:48:40.718+0200[0m] {[34msequential_executor.py:[0m81} ERROR[0m - Failed to execute task Command '['airflow', 'tasks', 'run', 'my_weather_dag', 'check_api', 'manual__2023-11-25T14:43:48.651156+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py']' returned non-zero exit status 1..[0m
[[34m2023-11-25T16:48:40.718+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='scheduled__2023-11-16T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:48:40.718+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state failed for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='scheduled__2023-11-17T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:48:40.718+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state failed for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='scheduled__2023-11-18T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:48:40.718+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state failed for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='scheduled__2023-11-19T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:48:40.718+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state failed for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='scheduled__2023-11-20T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:48:40.718+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state failed for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='scheduled__2023-11-21T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:48:40.718+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state failed for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='scheduled__2023-11-22T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:48:40.718+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state failed for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='scheduled__2023-11-23T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:48:40.718+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state failed for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='scheduled__2023-11-24T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:48:40.718+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state failed for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='manual__2023-11-25T14:30:52.019411+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:48:40.718+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state failed for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='manual__2023-11-25T14:35:58.205237+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:48:40.718+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state failed for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='check_api', run_id='manual__2023-11-25T14:43:48.651156+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:48:40.721+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=check_api, run_id=manual__2023-11-25T14:30:52.019411+00:00, map_index=-1, run_start_date=None, run_end_date=2023-11-25 14:36:11.287065+00:00, run_duration=None, state=removed, executor_state=failed, try_number=1, max_tries=0, job_id=None, pool=default_pool, queue=default, priority_weight=21, operator=HttpSensor, queued_dttm=2023-11-25 14:44:15.748483+00:00, queued_by_job_id=None, pid=None[0m
[[34m2023-11-25T16:48:40.721+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=check_api, run_id=manual__2023-11-25T14:35:58.205237+00:00, map_index=-1, run_start_date=2023-11-25 14:36:12.282358+00:00, run_end_date=2023-11-25 14:36:12.282358+00:00, run_duration=0.0, state=removed, executor_state=failed, try_number=1, max_tries=0, job_id=None, pool=default_pool, queue=default, priority_weight=21, operator=HttpSensor, queued_dttm=2023-11-25 14:44:15.748483+00:00, queued_by_job_id=None, pid=None[0m
[[34m2023-11-25T16:48:40.721+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=check_api, run_id=manual__2023-11-25T14:43:48.651156+00:00, map_index=-1, run_start_date=None, run_end_date=None, run_duration=None, state=removed, executor_state=failed, try_number=1, max_tries=0, job_id=None, pool=default_pool, queue=default, priority_weight=21, operator=HttpSensor, queued_dttm=2023-11-25 14:44:15.748483+00:00, queued_by_job_id=None, pid=None[0m
[[34m2023-11-25T16:48:40.722+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=check_api, run_id=scheduled__2023-11-16T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:44:17.118458+00:00, run_end_date=None, run_duration=None, state=removed, executor_state=success, try_number=1, max_tries=0, job_id=90, pool=default_pool, queue=default, priority_weight=21, operator=HttpSensor, queued_dttm=2023-11-25 14:44:15.748483+00:00, queued_by_job_id=None, pid=10410[0m
[[34m2023-11-25T16:48:40.722+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=check_api, run_id=scheduled__2023-11-17T00:00:00+00:00, map_index=-1, run_start_date=None, run_end_date=2023-11-25 14:36:11.352184+00:00, run_duration=None, state=removed, executor_state=failed, try_number=1, max_tries=0, job_id=None, pool=default_pool, queue=default, priority_weight=21, operator=HttpSensor, queued_dttm=2023-11-25 14:44:15.748483+00:00, queued_by_job_id=None, pid=None[0m
[[34m2023-11-25T16:48:40.722+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=check_api, run_id=scheduled__2023-11-18T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:36:12.320513+00:00, run_end_date=2023-11-25 14:36:12.320513+00:00, run_duration=0.0, state=removed, executor_state=failed, try_number=1, max_tries=0, job_id=None, pool=default_pool, queue=default, priority_weight=21, operator=HttpSensor, queued_dttm=2023-11-25 14:44:15.748483+00:00, queued_by_job_id=None, pid=None[0m
[[34m2023-11-25T16:48:40.722+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=check_api, run_id=scheduled__2023-11-19T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:36:12.276177+00:00, run_end_date=2023-11-25 14:36:12.276177+00:00, run_duration=0.0, state=removed, executor_state=failed, try_number=1, max_tries=0, job_id=None, pool=default_pool, queue=default, priority_weight=21, operator=HttpSensor, queued_dttm=2023-11-25 14:44:15.748483+00:00, queued_by_job_id=None, pid=None[0m
[[34m2023-11-25T16:48:40.722+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=check_api, run_id=scheduled__2023-11-20T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:36:03.890153+00:00, run_end_date=2023-11-25 14:36:03.890153+00:00, run_duration=0.0, state=removed, executor_state=failed, try_number=1, max_tries=0, job_id=None, pool=default_pool, queue=default, priority_weight=21, operator=HttpSensor, queued_dttm=2023-11-25 14:44:15.748483+00:00, queued_by_job_id=None, pid=None[0m
[[34m2023-11-25T16:48:40.722+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=check_api, run_id=scheduled__2023-11-21T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:36:06.498469+00:00, run_end_date=2023-11-25 14:36:06.498469+00:00, run_duration=0.0, state=removed, executor_state=failed, try_number=1, max_tries=0, job_id=None, pool=default_pool, queue=default, priority_weight=21, operator=HttpSensor, queued_dttm=2023-11-25 14:44:15.748483+00:00, queued_by_job_id=None, pid=None[0m
[[34m2023-11-25T16:48:40.722+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=check_api, run_id=scheduled__2023-11-22T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:36:09.341416+00:00, run_end_date=2023-11-25 14:36:09.341416+00:00, run_duration=0.0, state=removed, executor_state=failed, try_number=1, max_tries=0, job_id=None, pool=default_pool, queue=default, priority_weight=21, operator=HttpSensor, queued_dttm=2023-11-25 14:44:15.748483+00:00, queued_by_job_id=None, pid=None[0m
[[34m2023-11-25T16:48:40.722+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=check_api, run_id=scheduled__2023-11-23T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:36:12.254824+00:00, run_end_date=2023-11-25 14:36:12.254824+00:00, run_duration=0.0, state=removed, executor_state=failed, try_number=1, max_tries=0, job_id=None, pool=default_pool, queue=default, priority_weight=21, operator=HttpSensor, queued_dttm=2023-11-25 14:44:15.748483+00:00, queued_by_job_id=None, pid=None[0m
[[34m2023-11-25T16:48:40.722+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=check_api, run_id=scheduled__2023-11-24T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:36:14.751241+00:00, run_end_date=2023-11-25 14:36:14.751241+00:00, run_duration=0.0, state=removed, executor_state=failed, try_number=1, max_tries=0, job_id=None, pool=default_pool, queue=default, priority_weight=21, operator=HttpSensor, queued_dttm=2023-11-25 14:44:15.748483+00:00, queued_by_job_id=None, pid=None[0m
[[34m2023-11-25T16:48:40.733+0200[0m] {[34mmanager.py:[0m302} ERROR[0m - DagFileProcessorManager (PID=9891) last sent a heartbeat 265.08 seconds ago! Restarting it[0m
[[34m2023-11-25T16:48:40.738+0200[0m] {[34mprocess_utils.py:[0m131} INFO[0m - Sending 15 to group 9891. PIDs of all processes in the group: [9891][0m
[[34m2023-11-25T16:48:40.738+0200[0m] {[34mprocess_utils.py:[0m86} INFO[0m - Sending the signal 15 to group 9891[0m
[[34m2023-11-25T16:48:40.930+0200[0m] {[34mprocess_utils.py:[0m79} INFO[0m - Process psutil.Process(pid=9891, status='terminated', exitcode=0, started='16:35:53') (9891) terminated with exit code 0[0m
[[34m2023-11-25T16:48:40.933+0200[0m] {[34mmanager.py:[0m166} INFO[0m - Launched DagFileProcessorManager with pid: 10534[0m
[[34m2023-11-25T16:48:40.950+0200[0m] {[34mscheduler_job_runner.py:[0m1605} INFO[0m - Adopting or resetting orphaned tasks for active dag runs[0m
[[34m2023-11-25T16:48:40.951+0200[0m] {[34mscheduler_job_runner.py:[0m1628} INFO[0m - Marked 2 SchedulerJob instances as failed[0m
[[34m2023-11-25T16:48:40.954+0200[0m] {[34mscheduler_job_runner.py:[0m1669} INFO[0m - Reset the following 14 orphaned TaskInstances:
	<TaskInstance: my_weather_dag.get_timestamp_Odesa scheduled__2023-11-21T00:00:00+00:00 [queued]>
	<TaskInstance: my_weather_dag.get_timestamp_Zhmerynka scheduled__2023-11-21T00:00:00+00:00 [queued]>
	<TaskInstance: my_weather_dag.get_timestamp_Lviv scheduled__2023-11-22T00:00:00+00:00 [queued]>
	<TaskInstance: my_weather_dag.get_timestamp_Kyiv scheduled__2023-11-22T00:00:00+00:00 [queued]>
	<TaskInstance: my_weather_dag.get_timestamp_Harkiv scheduled__2023-11-22T00:00:00+00:00 [queued]>
	<TaskInstance: my_weather_dag.get_timestamp_Odesa scheduled__2023-11-22T00:00:00+00:00 [queued]>
	<TaskInstance: my_weather_dag.get_timestamp_Zhmerynka scheduled__2023-11-22T00:00:00+00:00 [queued]>
	<TaskInstance: my_weather_dag.get_timestamp_Lviv scheduled__2023-11-23T00:00:00+00:00 [queued]>
	<TaskInstance: my_weather_dag.get_timestamp_Kyiv scheduled__2023-11-23T00:00:00+00:00 [queued]>
	<TaskInstance: my_weather_dag.get_timestamp_Harkiv scheduled__2023-11-23T00:00:00+00:00 [queued]>
	<TaskInstance: my_weather_dag.get_timestamp_Odesa scheduled__2023-11-23T00:00:00+00:00 [queued]>
	<TaskInstance: my_weather_dag.get_timestamp_Zhmerynka scheduled__2023-11-23T00:00:00+00:00 [queued]>
	<TaskInstance: my_weather_dag.get_timestamp_Lviv scheduled__2023-11-24T00:00:00+00:00 [queued]>
	<TaskInstance: my_weather_dag.get_timestamp_Kyiv scheduled__2023-11-24T00:00:00+00:00 [queued]>[0m
[[34m2023-11-25T16:48:41.771+0200[0m] {[34msettings.py:[0m61} INFO[0m - Configured default timezone Timezone('UTC')[0m
[2023-11-25T16:48:41.790+0200] {manager.py:410} WARNING - Because we cannot use more than 1 thread (parsing_processes = 2) when using sqlite. So we set parallelism to 1.
[[34m2023-11-25T16:48:43.219+0200[0m] {[34mdagrun.py:[0m632} ERROR[0m - Marking run <DagRun my_weather_dag @ 2023-11-15 00:00:00+00:00: scheduled__2023-11-15T00:00:00+00:00, state:running, queued_at: 2023-11-25 14:42:22.012534+00:00. externally triggered: False> failed[0m
[[34m2023-11-25T16:48:43.219+0200[0m] {[34mdagrun.py:[0m704} INFO[0m - DagRun Finished: dag_id=my_weather_dag, execution_date=2023-11-15 00:00:00+00:00, run_id=scheduled__2023-11-15T00:00:00+00:00, run_start_date=2023-11-25 14:43:49.316828+00:00, run_end_date=2023-11-25 14:48:43.219943+00:00, run_duration=293.903115, state=failed, external_trigger=False, run_type=scheduled, data_interval_start=2023-11-15 00:00:00+00:00, data_interval_end=2023-11-16 00:00:00+00:00, dag_hash=8b2436be05b66f9de16045dff5ef1685[0m
[[34m2023-11-25T16:48:43.221+0200[0m] {[34mdag.py:[0m3722} INFO[0m - Setting next_dagrun for my_weather_dag to 2023-11-16T00:00:00+00:00, run_after=2023-11-17T00:00:00+00:00[0m
[[34m2023-11-25T16:48:43.222+0200[0m] {[34mdagrun.py:[0m632} ERROR[0m - Marking run <DagRun my_weather_dag @ 2023-11-17 00:00:00+00:00: scheduled__2023-11-17T00:00:00+00:00, state:running, queued_at: 2023-11-25 14:42:41.926960+00:00. externally triggered: False> failed[0m
[[34m2023-11-25T16:48:43.223+0200[0m] {[34mdagrun.py:[0m704} INFO[0m - DagRun Finished: dag_id=my_weather_dag, execution_date=2023-11-17 00:00:00+00:00, run_id=scheduled__2023-11-17T00:00:00+00:00, run_start_date=2023-11-25 14:43:49.316907+00:00, run_end_date=2023-11-25 14:48:43.223001+00:00, run_duration=293.906094, state=failed, external_trigger=False, run_type=scheduled, data_interval_start=2023-11-17 00:00:00+00:00, data_interval_end=2023-11-18 00:00:00+00:00, dag_hash=8b2436be05b66f9de16045dff5ef1685[0m
[[34m2023-11-25T16:48:43.224+0200[0m] {[34mdag.py:[0m3722} INFO[0m - Setting next_dagrun for my_weather_dag to 2023-11-18T00:00:00+00:00, run_after=2023-11-19T00:00:00+00:00[0m
[[34m2023-11-25T16:48:43.253+0200[0m] {[34mdagrun.py:[0m632} ERROR[0m - Marking run <DagRun my_weather_dag @ 2023-11-16 00:00:00+00:00: scheduled__2023-11-16T00:00:00+00:00, state:running, queued_at: 2023-11-25 14:42:30.553666+00:00. externally triggered: False> failed[0m
[[34m2023-11-25T16:48:43.253+0200[0m] {[34mdagrun.py:[0m704} INFO[0m - DagRun Finished: dag_id=my_weather_dag, execution_date=2023-11-16 00:00:00+00:00, run_id=scheduled__2023-11-16T00:00:00+00:00, run_start_date=2023-11-25 14:43:49.317117+00:00, run_end_date=2023-11-25 14:48:43.253478+00:00, run_duration=293.936361, state=failed, external_trigger=False, run_type=scheduled, data_interval_start=2023-11-16 00:00:00+00:00, data_interval_end=2023-11-17 00:00:00+00:00, dag_hash=8b2436be05b66f9de16045dff5ef1685[0m
[[34m2023-11-25T16:48:43.255+0200[0m] {[34mdag.py:[0m3722} INFO[0m - Setting next_dagrun for my_weather_dag to 2023-11-17T00:00:00+00:00, run_after=2023-11-18T00:00:00+00:00[0m
[[34m2023-11-25T16:48:43.259+0200[0m] {[34mscheduler_job_runner.py:[0m413} INFO[0m - 16 tasks up for execution:
	<TaskInstance: my_weather_dag.get_timestamp_Lviv scheduled__2023-11-22T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Kyiv scheduled__2023-11-22T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Harkiv scheduled__2023-11-22T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Odesa scheduled__2023-11-22T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Zhmerynka scheduled__2023-11-22T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Lviv scheduled__2023-11-23T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Kyiv scheduled__2023-11-23T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Harkiv scheduled__2023-11-23T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Odesa scheduled__2023-11-23T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Zhmerynka scheduled__2023-11-23T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Lviv scheduled__2023-11-24T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Kyiv scheduled__2023-11-24T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Harkiv scheduled__2023-11-24T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Odesa scheduled__2023-11-24T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Zhmerynka scheduled__2023-11-24T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Lviv manual__2023-11-25T14:30:52.019411+00:00 [scheduled]>[0m
[[34m2023-11-25T16:48:43.259+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 0/16 running and queued tasks[0m
[[34m2023-11-25T16:48:43.259+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 1/16 running and queued tasks[0m
[[34m2023-11-25T16:48:43.259+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 2/16 running and queued tasks[0m
[[34m2023-11-25T16:48:43.259+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 3/16 running and queued tasks[0m
[[34m2023-11-25T16:48:43.259+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 4/16 running and queued tasks[0m
[[34m2023-11-25T16:48:43.259+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 5/16 running and queued tasks[0m
[[34m2023-11-25T16:48:43.259+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 6/16 running and queued tasks[0m
[[34m2023-11-25T16:48:43.259+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 7/16 running and queued tasks[0m
[[34m2023-11-25T16:48:43.259+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 8/16 running and queued tasks[0m
[[34m2023-11-25T16:48:43.259+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 9/16 running and queued tasks[0m
[[34m2023-11-25T16:48:43.259+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 10/16 running and queued tasks[0m
[[34m2023-11-25T16:48:43.260+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 11/16 running and queued tasks[0m
[[34m2023-11-25T16:48:43.260+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 12/16 running and queued tasks[0m
[[34m2023-11-25T16:48:43.260+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 13/16 running and queued tasks[0m
[[34m2023-11-25T16:48:43.260+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 14/16 running and queued tasks[0m
[[34m2023-11-25T16:48:43.260+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 15/16 running and queued tasks[0m
[[34m2023-11-25T16:48:43.260+0200[0m] {[34mscheduler_job_runner.py:[0m592} INFO[0m - Setting the following tasks to queued state:
	<TaskInstance: my_weather_dag.get_timestamp_Lviv scheduled__2023-11-22T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Kyiv scheduled__2023-11-22T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Harkiv scheduled__2023-11-22T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Odesa scheduled__2023-11-22T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Zhmerynka scheduled__2023-11-22T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Lviv scheduled__2023-11-23T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Kyiv scheduled__2023-11-23T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Harkiv scheduled__2023-11-23T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Odesa scheduled__2023-11-23T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Zhmerynka scheduled__2023-11-23T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Lviv scheduled__2023-11-24T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Kyiv scheduled__2023-11-24T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Harkiv scheduled__2023-11-24T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Odesa scheduled__2023-11-24T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Zhmerynka scheduled__2023-11-24T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Lviv manual__2023-11-25T14:30:52.019411+00:00 [scheduled]>[0m
[[34m2023-11-25T16:48:43.261+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Lviv', run_id='scheduled__2023-11-22T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:48:43.261+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Lviv', 'scheduled__2023-11-22T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:43.261+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Kyiv', run_id='scheduled__2023-11-22T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:48:43.261+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Kyiv', 'scheduled__2023-11-22T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:43.261+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Harkiv', run_id='scheduled__2023-11-22T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:48:43.261+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Harkiv', 'scheduled__2023-11-22T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:43.261+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Odesa', run_id='scheduled__2023-11-22T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:48:43.261+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Odesa', 'scheduled__2023-11-22T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:43.261+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Zhmerynka', run_id='scheduled__2023-11-22T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:48:43.261+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Zhmerynka', 'scheduled__2023-11-22T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:43.261+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Lviv', run_id='scheduled__2023-11-23T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:48:43.261+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Lviv', 'scheduled__2023-11-23T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:43.261+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Kyiv', run_id='scheduled__2023-11-23T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:48:43.261+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Kyiv', 'scheduled__2023-11-23T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:43.261+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Harkiv', run_id='scheduled__2023-11-23T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:48:43.261+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Harkiv', 'scheduled__2023-11-23T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:43.261+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Odesa', run_id='scheduled__2023-11-23T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:48:43.262+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Odesa', 'scheduled__2023-11-23T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:43.262+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Zhmerynka', run_id='scheduled__2023-11-23T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:48:43.262+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Zhmerynka', 'scheduled__2023-11-23T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:43.262+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Lviv', run_id='scheduled__2023-11-24T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:48:43.262+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Lviv', 'scheduled__2023-11-24T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:43.262+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Kyiv', run_id='scheduled__2023-11-24T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:48:43.262+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Kyiv', 'scheduled__2023-11-24T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:43.262+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Harkiv', run_id='scheduled__2023-11-24T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:48:43.262+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Harkiv', 'scheduled__2023-11-24T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:43.262+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Odesa', run_id='scheduled__2023-11-24T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:48:43.262+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Odesa', 'scheduled__2023-11-24T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:43.262+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Zhmerynka', run_id='scheduled__2023-11-24T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:48:43.262+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Zhmerynka', 'scheduled__2023-11-24T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:43.262+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Lviv', run_id='manual__2023-11-25T14:30:52.019411+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:48:43.262+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Lviv', 'manual__2023-11-25T14:30:52.019411+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:43.263+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Lviv', 'scheduled__2023-11-22T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:44.023+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:48:44.321+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:48:44.322+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:44.462+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:44.594+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=scheduled__2023-11-22T00:00:00+00:00/task_id=get_timestamp_Lviv permission to 509
[[34m2023-11-25T16:48:44.623+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Lviv scheduled__2023-11-22T00:00:00+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:48:45.256+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Kyiv', 'scheduled__2023-11-22T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:46.098+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:48:46.432+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:48:46.432+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:46.680+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:46.865+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=scheduled__2023-11-22T00:00:00+00:00/task_id=get_timestamp_Kyiv permission to 509
[[34m2023-11-25T16:48:46.889+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Kyiv scheduled__2023-11-22T00:00:00+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:48:48.070+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Harkiv', 'scheduled__2023-11-22T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:48.757+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:48:48.952+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:48:48.953+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:49.069+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:49.187+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:48:49.227+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Harkiv scheduled__2023-11-22T00:00:00+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:48:50.118+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Odesa', 'scheduled__2023-11-22T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:50.784+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:48:51.058+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:48:51.059+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:51.198+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:51.327+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:48:51.341+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Odesa scheduled__2023-11-22T00:00:00+00:00 [success]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:48:51.684+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Zhmerynka', 'scheduled__2023-11-22T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:52.294+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:48:52.541+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:48:52.541+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:52.716+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:52.849+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
[[34m2023-11-25T16:48:52.870+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Zhmerynka scheduled__2023-11-22T00:00:00+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:48:53.617+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Lviv', 'scheduled__2023-11-23T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:54.414+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:48:54.663+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:48:54.663+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:54.840+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:54.887+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=scheduled__2023-11-23T00:00:00+00:00/task_id=get_timestamp_Lviv permission to 509
[[34m2023-11-25T16:48:54.900+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Lviv scheduled__2023-11-23T00:00:00+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:48:55.450+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Kyiv', 'scheduled__2023-11-23T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:56.371+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:48:56.576+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:48:56.577+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:56.780+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:56.860+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=scheduled__2023-11-23T00:00:00+00:00/task_id=get_timestamp_Kyiv permission to 509
[[34m2023-11-25T16:48:56.875+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Kyiv scheduled__2023-11-23T00:00:00+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:48:57.285+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Harkiv', 'scheduled__2023-11-23T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:57.885+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:48:58.027+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:48:58.027+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:58.167+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:58.271+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=scheduled__2023-11-23T00:00:00+00:00/task_id=get_timestamp_Harkiv permission to 509
[[34m2023-11-25T16:48:58.308+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Harkiv scheduled__2023-11-23T00:00:00+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:48:58.835+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Odesa', 'scheduled__2023-11-23T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:48:59.573+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:48:59.690+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:48:59.690+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:59.810+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:48:59.941+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=scheduled__2023-11-23T00:00:00+00:00/task_id=get_timestamp_Odesa permission to 509
[[34m2023-11-25T16:48:59.962+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Odesa scheduled__2023-11-23T00:00:00+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:49:00.374+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Zhmerynka', 'scheduled__2023-11-23T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:01.156+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:49:01.363+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:49:01.363+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:01.442+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:01.491+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=scheduled__2023-11-23T00:00:00+00:00/task_id=get_timestamp_Zhmerynka permission to 509
[[34m2023-11-25T16:49:01.503+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Zhmerynka scheduled__2023-11-23T00:00:00+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:49:01.874+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Lviv', 'scheduled__2023-11-24T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:02.518+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:49:02.730+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:49:02.731+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:02.914+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:03.016+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=scheduled__2023-11-24T00:00:00+00:00/task_id=get_timestamp_Lviv permission to 509
[[34m2023-11-25T16:49:03.042+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Lviv scheduled__2023-11-24T00:00:00+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:49:03.490+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Kyiv', 'scheduled__2023-11-24T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:04.160+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:49:04.444+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:49:04.445+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:04.531+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:04.603+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=scheduled__2023-11-24T00:00:00+00:00/task_id=get_timestamp_Kyiv permission to 509
[[34m2023-11-25T16:49:04.641+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Kyiv scheduled__2023-11-24T00:00:00+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:49:04.988+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Harkiv', 'scheduled__2023-11-24T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:05.646+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:49:05.877+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:49:05.878+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:06.134+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:06.242+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=scheduled__2023-11-24T00:00:00+00:00/task_id=get_timestamp_Harkiv permission to 509
[[34m2023-11-25T16:49:06.310+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Harkiv scheduled__2023-11-24T00:00:00+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:49:06.769+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Odesa', 'scheduled__2023-11-24T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:07.398+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:49:07.601+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:49:07.603+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:07.760+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:07.877+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=scheduled__2023-11-24T00:00:00+00:00/task_id=get_timestamp_Odesa permission to 509
[[34m2023-11-25T16:49:07.919+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Odesa scheduled__2023-11-24T00:00:00+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:49:08.510+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Zhmerynka', 'scheduled__2023-11-24T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:09.094+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:49:09.304+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:49:09.304+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:09.428+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:09.541+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=scheduled__2023-11-24T00:00:00+00:00/task_id=get_timestamp_Zhmerynka permission to 509
[[34m2023-11-25T16:49:09.577+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Zhmerynka scheduled__2023-11-24T00:00:00+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:49:10.096+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Lviv', 'manual__2023-11-25T14:30:52.019411+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:10.715+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:49:10.967+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:49:10.968+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:11.104+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:11.190+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=manual__2023-11-25T14:30:52.019411+00:00/task_id=get_timestamp_Lviv permission to 509
[[34m2023-11-25T16:49:11.222+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Lviv manual__2023-11-25T14:30:52.019411+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:49:11.572+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Lviv', run_id='scheduled__2023-11-22T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:49:11.573+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Kyiv', run_id='scheduled__2023-11-22T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:49:11.573+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Harkiv', run_id='scheduled__2023-11-22T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:49:11.573+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Odesa', run_id='scheduled__2023-11-22T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:49:11.573+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Zhmerynka', run_id='scheduled__2023-11-22T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:49:11.573+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Lviv', run_id='scheduled__2023-11-23T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:49:11.573+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Kyiv', run_id='scheduled__2023-11-23T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:49:11.573+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Harkiv', run_id='scheduled__2023-11-23T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:49:11.573+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Odesa', run_id='scheduled__2023-11-23T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:49:11.573+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Zhmerynka', run_id='scheduled__2023-11-23T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:49:11.573+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Lviv', run_id='scheduled__2023-11-24T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:49:11.573+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Kyiv', run_id='scheduled__2023-11-24T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:49:11.573+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Harkiv', run_id='scheduled__2023-11-24T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:49:11.573+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Odesa', run_id='scheduled__2023-11-24T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:49:11.573+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Zhmerynka', run_id='scheduled__2023-11-24T00:00:00+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:49:11.573+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Lviv', run_id='manual__2023-11-25T14:30:52.019411+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:49:11.578+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=get_timestamp_Harkiv, run_id=scheduled__2023-11-24T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:49:06.415596+00:00, run_end_date=2023-11-25 14:49:06.508984+00:00, run_duration=0.093388, state=success, executor_state=success, try_number=1, max_tries=0, job_id=151, pool=default_pool, queue=default, priority_weight=4, operator=PythonOperator, queued_dttm=2023-11-25 14:48:43.260492+00:00, queued_by_job_id=59, pid=10588[0m
[[34m2023-11-25T16:49:11.578+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=get_timestamp_Kyiv, run_id=scheduled__2023-11-24T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:49:04.712358+00:00, run_end_date=2023-11-25 14:49:04.769244+00:00, run_duration=0.056886, state=success, executor_state=success, try_number=1, max_tries=0, job_id=150, pool=default_pool, queue=default, priority_weight=4, operator=PythonOperator, queued_dttm=2023-11-25 14:48:43.260492+00:00, queued_by_job_id=59, pid=10585[0m
[[34m2023-11-25T16:49:11.578+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=get_timestamp_Lviv, run_id=scheduled__2023-11-24T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:49:03.158935+00:00, run_end_date=2023-11-25 14:49:03.253726+00:00, run_duration=0.094791, state=success, executor_state=success, try_number=1, max_tries=0, job_id=147, pool=default_pool, queue=default, priority_weight=4, operator=PythonOperator, queued_dttm=2023-11-25 14:48:43.260492+00:00, queued_by_job_id=59, pid=10582[0m
[[34m2023-11-25T16:49:11.578+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=get_timestamp_Odesa, run_id=scheduled__2023-11-24T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:49:07.996864+00:00, run_end_date=2023-11-25 14:49:08.243639+00:00, run_duration=0.246775, state=success, executor_state=success, try_number=1, max_tries=0, job_id=154, pool=default_pool, queue=default, priority_weight=4, operator=PythonOperator, queued_dttm=2023-11-25 14:48:43.260492+00:00, queued_by_job_id=59, pid=10591[0m
[[34m2023-11-25T16:49:11.578+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=get_timestamp_Zhmerynka, run_id=scheduled__2023-11-24T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:49:09.676872+00:00, run_end_date=2023-11-25 14:49:09.859920+00:00, run_duration=0.183048, state=success, executor_state=success, try_number=1, max_tries=0, job_id=156, pool=default_pool, queue=default, priority_weight=4, operator=PythonOperator, queued_dttm=2023-11-25 14:48:43.260492+00:00, queued_by_job_id=59, pid=10594[0m
[[34m2023-11-25T16:49:11.578+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=get_timestamp_Lviv, run_id=manual__2023-11-25T14:30:52.019411+00:00, map_index=-1, run_start_date=2023-11-25 14:49:11.292989+00:00, run_end_date=2023-11-25 14:49:11.350089+00:00, run_duration=0.0571, state=success, executor_state=success, try_number=1, max_tries=0, job_id=158, pool=default_pool, queue=default, priority_weight=4, operator=PythonOperator, queued_dttm=2023-11-25 14:48:43.260492+00:00, queued_by_job_id=59, pid=10603[0m
[[34m2023-11-25T16:49:11.578+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=get_timestamp_Harkiv, run_id=scheduled__2023-11-22T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:48:49.360593+00:00, run_end_date=2023-11-25 14:48:49.651582+00:00, run_duration=0.290989, state=success, executor_state=success, try_number=1, max_tries=0, job_id=133, pool=default_pool, queue=default, priority_weight=4, operator=PythonOperator, queued_dttm=2023-11-25 14:48:43.260492+00:00, queued_by_job_id=59, pid=10548[0m
[[34m2023-11-25T16:49:11.578+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=get_timestamp_Kyiv, run_id=scheduled__2023-11-22T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:48:47.029113+00:00, run_end_date=2023-11-25 14:48:47.557445+00:00, run_duration=0.528332, state=success, executor_state=success, try_number=1, max_tries=0, job_id=130, pool=default_pool, queue=default, priority_weight=4, operator=PythonOperator, queued_dttm=2023-11-25 14:48:43.260492+00:00, queued_by_job_id=59, pid=10544[0m
[[34m2023-11-25T16:49:11.578+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=get_timestamp_Lviv, run_id=scheduled__2023-11-22T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:48:44.716276+00:00, run_end_date=2023-11-25 14:48:44.780265+00:00, run_duration=0.063989, state=success, executor_state=success, try_number=1, max_tries=0, job_id=128, pool=default_pool, queue=default, priority_weight=4, operator=PythonOperator, queued_dttm=2023-11-25 14:48:43.260492+00:00, queued_by_job_id=59, pid=10541[0m
[[34m2023-11-25T16:49:11.578+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=get_timestamp_Odesa, run_id=scheduled__2023-11-22T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:48:51.190538+00:00, run_end_date=2023-11-25 14:48:51.256552+00:00, run_duration=0.066014, state=success, executor_state=success, try_number=1, max_tries=0, job_id=134, pool=default_pool, queue=default, priority_weight=4, operator=PythonOperator, queued_dttm=2023-11-25 14:48:43.260492+00:00, queued_by_job_id=59, pid=10551[0m
[[34m2023-11-25T16:49:11.578+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=get_timestamp_Zhmerynka, run_id=scheduled__2023-11-22T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:48:52.903806+00:00, run_end_date=2023-11-25 14:48:52.988038+00:00, run_duration=0.084232, state=success, executor_state=success, try_number=1, max_tries=0, job_id=136, pool=default_pool, queue=default, priority_weight=4, operator=PythonOperator, queued_dttm=2023-11-25 14:48:43.260492+00:00, queued_by_job_id=59, pid=10555[0m
[[34m2023-11-25T16:49:11.578+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=get_timestamp_Harkiv, run_id=scheduled__2023-11-23T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:48:58.389256+00:00, run_end_date=2023-11-25 14:48:58.461600+00:00, run_duration=0.072344, state=success, executor_state=success, try_number=1, max_tries=0, job_id=141, pool=default_pool, queue=default, priority_weight=4, operator=PythonOperator, queued_dttm=2023-11-25 14:48:43.260492+00:00, queued_by_job_id=59, pid=10572[0m
[[34m2023-11-25T16:49:11.578+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=get_timestamp_Kyiv, run_id=scheduled__2023-11-23T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:48:56.970193+00:00, run_end_date=2023-11-25 14:48:57.031171+00:00, run_duration=0.060978, state=success, executor_state=success, try_number=1, max_tries=0, job_id=139, pool=default_pool, queue=default, priority_weight=4, operator=PythonOperator, queued_dttm=2023-11-25 14:48:43.260492+00:00, queued_by_job_id=59, pid=10569[0m
[[34m2023-11-25T16:49:11.578+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=get_timestamp_Lviv, run_id=scheduled__2023-11-23T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:48:54.998496+00:00, run_end_date=2023-11-25 14:48:55.163554+00:00, run_duration=0.165058, state=success, executor_state=success, try_number=1, max_tries=0, job_id=138, pool=default_pool, queue=default, priority_weight=4, operator=PythonOperator, queued_dttm=2023-11-25 14:48:43.260492+00:00, queued_by_job_id=59, pid=10566[0m
[[34m2023-11-25T16:49:11.578+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=get_timestamp_Odesa, run_id=scheduled__2023-11-23T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:49:00.049414+00:00, run_end_date=2023-11-25 14:49:00.111774+00:00, run_duration=0.06236, state=success, executor_state=success, try_number=1, max_tries=0, job_id=143, pool=default_pool, queue=default, priority_weight=4, operator=PythonOperator, queued_dttm=2023-11-25 14:48:43.260492+00:00, queued_by_job_id=59, pid=10575[0m
[[34m2023-11-25T16:49:11.578+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=get_timestamp_Zhmerynka, run_id=scheduled__2023-11-23T00:00:00+00:00, map_index=-1, run_start_date=2023-11-25 14:49:01.569283+00:00, run_end_date=2023-11-25 14:49:01.621705+00:00, run_duration=0.052422, state=success, executor_state=success, try_number=1, max_tries=0, job_id=145, pool=default_pool, queue=default, priority_weight=4, operator=PythonOperator, queued_dttm=2023-11-25 14:48:43.260492+00:00, queued_by_job_id=59, pid=10579[0m
[[34m2023-11-25T16:49:12.369+0200[0m] {[34mdag.py:[0m3722} INFO[0m - Setting next_dagrun for my_weather_dag to 2023-11-18T00:00:00+00:00, run_after=2023-11-19T00:00:00+00:00[0m
[[34m2023-11-25T16:49:12.403+0200[0m] {[34mscheduler_job_runner.py:[0m413} INFO[0m - 16 tasks up for execution:
	<TaskInstance: my_weather_dag.get_timestamp_Kyiv manual__2023-11-25T14:30:52.019411+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Harkiv manual__2023-11-25T14:30:52.019411+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Odesa manual__2023-11-25T14:30:52.019411+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Zhmerynka manual__2023-11-25T14:30:52.019411+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Lviv manual__2023-11-25T14:35:58.205237+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Kyiv manual__2023-11-25T14:35:58.205237+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Harkiv manual__2023-11-25T14:35:58.205237+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Odesa manual__2023-11-25T14:35:58.205237+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Zhmerynka manual__2023-11-25T14:35:58.205237+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Lviv manual__2023-11-25T14:43:48.651156+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Kyiv manual__2023-11-25T14:43:48.651156+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Harkiv manual__2023-11-25T14:43:48.651156+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Odesa manual__2023-11-25T14:43:48.651156+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Zhmerynka manual__2023-11-25T14:43:48.651156+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Lviv manual__2023-11-25T14:47:42.106504+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Kyiv manual__2023-11-25T14:47:42.106504+00:00 [scheduled]>[0m
[[34m2023-11-25T16:49:12.403+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 0/16 running and queued tasks[0m
[[34m2023-11-25T16:49:12.403+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 1/16 running and queued tasks[0m
[[34m2023-11-25T16:49:12.403+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 2/16 running and queued tasks[0m
[[34m2023-11-25T16:49:12.403+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 3/16 running and queued tasks[0m
[[34m2023-11-25T16:49:12.404+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 4/16 running and queued tasks[0m
[[34m2023-11-25T16:49:12.404+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 5/16 running and queued tasks[0m
[[34m2023-11-25T16:49:12.404+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 6/16 running and queued tasks[0m
[[34m2023-11-25T16:49:12.404+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 7/16 running and queued tasks[0m
[[34m2023-11-25T16:49:12.404+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 8/16 running and queued tasks[0m
[[34m2023-11-25T16:49:12.404+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 9/16 running and queued tasks[0m
[[34m2023-11-25T16:49:12.404+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 10/16 running and queued tasks[0m
[[34m2023-11-25T16:49:12.404+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 11/16 running and queued tasks[0m
[[34m2023-11-25T16:49:12.404+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 12/16 running and queued tasks[0m
[[34m2023-11-25T16:49:12.404+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 13/16 running and queued tasks[0m
[[34m2023-11-25T16:49:12.404+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 14/16 running and queued tasks[0m
[[34m2023-11-25T16:49:12.404+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 15/16 running and queued tasks[0m
[[34m2023-11-25T16:49:12.404+0200[0m] {[34mscheduler_job_runner.py:[0m592} INFO[0m - Setting the following tasks to queued state:
	<TaskInstance: my_weather_dag.get_timestamp_Kyiv manual__2023-11-25T14:30:52.019411+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Harkiv manual__2023-11-25T14:30:52.019411+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Odesa manual__2023-11-25T14:30:52.019411+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Zhmerynka manual__2023-11-25T14:30:52.019411+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Lviv manual__2023-11-25T14:35:58.205237+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Kyiv manual__2023-11-25T14:35:58.205237+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Harkiv manual__2023-11-25T14:35:58.205237+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Odesa manual__2023-11-25T14:35:58.205237+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Zhmerynka manual__2023-11-25T14:35:58.205237+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Lviv manual__2023-11-25T14:43:48.651156+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Kyiv manual__2023-11-25T14:43:48.651156+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Harkiv manual__2023-11-25T14:43:48.651156+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Odesa manual__2023-11-25T14:43:48.651156+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Zhmerynka manual__2023-11-25T14:43:48.651156+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Lviv manual__2023-11-25T14:47:42.106504+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Kyiv manual__2023-11-25T14:47:42.106504+00:00 [scheduled]>[0m
[[34m2023-11-25T16:49:12.405+0200[0m] {[34mtaskinstance.py:[0m1441} WARNING[0m - cannot record scheduled_duration for task get_timestamp_Lviv because previous state change time has not been saved[0m
[[34m2023-11-25T16:49:12.405+0200[0m] {[34mtaskinstance.py:[0m1441} WARNING[0m - cannot record scheduled_duration for task get_timestamp_Kyiv because previous state change time has not been saved[0m
[[34m2023-11-25T16:49:12.405+0200[0m] {[34mtaskinstance.py:[0m1441} WARNING[0m - cannot record scheduled_duration for task get_timestamp_Harkiv because previous state change time has not been saved[0m
[[34m2023-11-25T16:49:12.406+0200[0m] {[34mtaskinstance.py:[0m1441} WARNING[0m - cannot record scheduled_duration for task get_timestamp_Odesa because previous state change time has not been saved[0m
[[34m2023-11-25T16:49:12.406+0200[0m] {[34mtaskinstance.py:[0m1441} WARNING[0m - cannot record scheduled_duration for task get_timestamp_Zhmerynka because previous state change time has not been saved[0m
[[34m2023-11-25T16:49:12.406+0200[0m] {[34mtaskinstance.py:[0m1441} WARNING[0m - cannot record scheduled_duration for task get_timestamp_Lviv because previous state change time has not been saved[0m
[[34m2023-11-25T16:49:12.406+0200[0m] {[34mtaskinstance.py:[0m1441} WARNING[0m - cannot record scheduled_duration for task get_timestamp_Kyiv because previous state change time has not been saved[0m
[[34m2023-11-25T16:49:12.406+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Kyiv', run_id='manual__2023-11-25T14:30:52.019411+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:49:12.406+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Kyiv', 'manual__2023-11-25T14:30:52.019411+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:12.406+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Harkiv', run_id='manual__2023-11-25T14:30:52.019411+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:49:12.406+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Harkiv', 'manual__2023-11-25T14:30:52.019411+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:12.407+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Odesa', run_id='manual__2023-11-25T14:30:52.019411+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:49:12.407+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Odesa', 'manual__2023-11-25T14:30:52.019411+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:12.407+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Zhmerynka', run_id='manual__2023-11-25T14:30:52.019411+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:49:12.407+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Zhmerynka', 'manual__2023-11-25T14:30:52.019411+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:12.407+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Lviv', run_id='manual__2023-11-25T14:35:58.205237+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:49:12.407+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Lviv', 'manual__2023-11-25T14:35:58.205237+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:12.407+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Kyiv', run_id='manual__2023-11-25T14:35:58.205237+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:49:12.407+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Kyiv', 'manual__2023-11-25T14:35:58.205237+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:12.407+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Harkiv', run_id='manual__2023-11-25T14:35:58.205237+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:49:12.407+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Harkiv', 'manual__2023-11-25T14:35:58.205237+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:12.407+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Odesa', run_id='manual__2023-11-25T14:35:58.205237+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:49:12.408+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Odesa', 'manual__2023-11-25T14:35:58.205237+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:12.408+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Zhmerynka', run_id='manual__2023-11-25T14:35:58.205237+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:49:12.408+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Zhmerynka', 'manual__2023-11-25T14:35:58.205237+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:12.408+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Lviv', run_id='manual__2023-11-25T14:43:48.651156+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:49:12.408+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Lviv', 'manual__2023-11-25T14:43:48.651156+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:12.408+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Kyiv', run_id='manual__2023-11-25T14:43:48.651156+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:49:12.408+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Kyiv', 'manual__2023-11-25T14:43:48.651156+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:12.408+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Harkiv', run_id='manual__2023-11-25T14:43:48.651156+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:49:12.408+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Harkiv', 'manual__2023-11-25T14:43:48.651156+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:12.408+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Odesa', run_id='manual__2023-11-25T14:43:48.651156+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:49:12.409+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Odesa', 'manual__2023-11-25T14:43:48.651156+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:12.409+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Zhmerynka', run_id='manual__2023-11-25T14:43:48.651156+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:49:12.409+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Zhmerynka', 'manual__2023-11-25T14:43:48.651156+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:12.409+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Lviv', run_id='manual__2023-11-25T14:47:42.106504+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:49:12.409+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Lviv', 'manual__2023-11-25T14:47:42.106504+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:12.409+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Kyiv', run_id='manual__2023-11-25T14:47:42.106504+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:49:12.409+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Kyiv', 'manual__2023-11-25T14:47:42.106504+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:12.410+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Kyiv', 'manual__2023-11-25T14:30:52.019411+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:13.037+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:49:13.425+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:49:13.427+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:13.613+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:13.781+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=manual__2023-11-25T14:30:52.019411+00:00/task_id=get_timestamp_Kyiv permission to 509
[[34m2023-11-25T16:49:13.829+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Kyiv manual__2023-11-25T14:30:52.019411+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:49:14.263+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Harkiv', 'manual__2023-11-25T14:30:52.019411+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:14.889+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:49:15.123+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:49:15.123+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:15.338+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:15.438+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=manual__2023-11-25T14:30:52.019411+00:00/task_id=get_timestamp_Harkiv permission to 509
[[34m2023-11-25T16:49:15.460+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Harkiv manual__2023-11-25T14:30:52.019411+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:49:15.879+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Odesa', 'manual__2023-11-25T14:30:52.019411+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:16.465+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:49:16.682+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:49:16.683+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:16.834+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:16.903+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=manual__2023-11-25T14:30:52.019411+00:00/task_id=get_timestamp_Odesa permission to 509
[[34m2023-11-25T16:49:16.929+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Odesa manual__2023-11-25T14:30:52.019411+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:49:17.341+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Zhmerynka', 'manual__2023-11-25T14:30:52.019411+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:18.083+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:49:18.308+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:49:18.309+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:18.541+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:18.659+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=manual__2023-11-25T14:30:52.019411+00:00/task_id=get_timestamp_Zhmerynka permission to 509
[[34m2023-11-25T16:49:18.722+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Zhmerynka manual__2023-11-25T14:30:52.019411+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:49:19.428+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Lviv', 'manual__2023-11-25T14:35:58.205237+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:20.122+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:49:20.479+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:49:20.483+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:20.645+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:20.753+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=manual__2023-11-25T14:35:58.205237+00:00/task_id=get_timestamp_Lviv permission to 509
[[34m2023-11-25T16:49:20.819+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Lviv manual__2023-11-25T14:35:58.205237+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:49:21.202+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Kyiv', 'manual__2023-11-25T14:35:58.205237+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:21.792+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:49:21.958+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:49:21.958+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:22.095+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:22.178+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=manual__2023-11-25T14:35:58.205237+00:00/task_id=get_timestamp_Kyiv permission to 509
[[34m2023-11-25T16:49:22.196+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Kyiv manual__2023-11-25T14:35:58.205237+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:49:22.649+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Harkiv', 'manual__2023-11-25T14:35:58.205237+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:23.325+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:49:23.496+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:49:23.497+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:23.606+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:23.687+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=manual__2023-11-25T14:35:58.205237+00:00/task_id=get_timestamp_Harkiv permission to 509
[[34m2023-11-25T16:49:23.712+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Harkiv manual__2023-11-25T14:35:58.205237+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:49:24.241+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Odesa', 'manual__2023-11-25T14:35:58.205237+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:24.863+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:49:25.102+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:49:25.103+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:25.250+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:25.323+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=manual__2023-11-25T14:35:58.205237+00:00/task_id=get_timestamp_Odesa permission to 509
[[34m2023-11-25T16:49:25.342+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Odesa manual__2023-11-25T14:35:58.205237+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:49:26.007+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Zhmerynka', 'manual__2023-11-25T14:35:58.205237+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:26.754+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:49:26.940+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:49:26.941+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:27.073+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:27.161+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=manual__2023-11-25T14:35:58.205237+00:00/task_id=get_timestamp_Zhmerynka permission to 509
[[34m2023-11-25T16:49:27.187+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Zhmerynka manual__2023-11-25T14:35:58.205237+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:49:27.673+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Lviv', 'manual__2023-11-25T14:43:48.651156+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:28.364+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:49:28.582+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:49:28.583+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:28.708+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:28.798+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=manual__2023-11-25T14:43:48.651156+00:00/task_id=get_timestamp_Lviv permission to 509
[[34m2023-11-25T16:49:28.819+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Lviv manual__2023-11-25T14:43:48.651156+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:49:29.405+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Kyiv', 'manual__2023-11-25T14:43:48.651156+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:29.988+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:49:30.199+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:49:30.200+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:30.315+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:30.383+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=manual__2023-11-25T14:43:48.651156+00:00/task_id=get_timestamp_Kyiv permission to 509
[[34m2023-11-25T16:49:30.410+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Kyiv manual__2023-11-25T14:43:48.651156+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:49:30.950+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Harkiv', 'manual__2023-11-25T14:43:48.651156+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:31.678+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:49:31.858+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:49:31.859+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:31.976+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:32.076+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=manual__2023-11-25T14:43:48.651156+00:00/task_id=get_timestamp_Harkiv permission to 509
[[34m2023-11-25T16:49:32.107+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Harkiv manual__2023-11-25T14:43:48.651156+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:49:32.662+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Odesa', 'manual__2023-11-25T14:43:48.651156+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:33.300+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:49:33.499+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:49:33.500+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:33.636+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:33.725+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=manual__2023-11-25T14:43:48.651156+00:00/task_id=get_timestamp_Odesa permission to 509
[[34m2023-11-25T16:49:33.746+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Odesa manual__2023-11-25T14:43:48.651156+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:49:34.336+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Zhmerynka', 'manual__2023-11-25T14:43:48.651156+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:35.086+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:49:35.325+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:49:35.326+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:35.517+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:35.616+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=manual__2023-11-25T14:43:48.651156+00:00/task_id=get_timestamp_Zhmerynka permission to 509
[[34m2023-11-25T16:49:35.634+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Zhmerynka manual__2023-11-25T14:43:48.651156+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:49:36.190+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Lviv', 'manual__2023-11-25T14:47:42.106504+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:36.868+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:49:37.042+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:49:37.043+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:37.201+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:37.269+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=manual__2023-11-25T14:47:42.106504+00:00/task_id=get_timestamp_Lviv permission to 509
[[34m2023-11-25T16:49:37.295+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Lviv manual__2023-11-25T14:47:42.106504+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:49:37.807+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Kyiv', 'manual__2023-11-25T14:47:42.106504+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:38.550+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:49:38.746+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:49:38.746+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:38.877+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:38.939+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=manual__2023-11-25T14:47:42.106504+00:00/task_id=get_timestamp_Kyiv permission to 509
[[34m2023-11-25T16:49:38.968+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Kyiv manual__2023-11-25T14:47:42.106504+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:49:39.494+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Kyiv', run_id='manual__2023-11-25T14:30:52.019411+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:49:39.495+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Harkiv', run_id='manual__2023-11-25T14:30:52.019411+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:49:39.495+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Odesa', run_id='manual__2023-11-25T14:30:52.019411+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:49:39.495+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Zhmerynka', run_id='manual__2023-11-25T14:30:52.019411+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:49:39.495+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Lviv', run_id='manual__2023-11-25T14:35:58.205237+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:49:39.495+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Kyiv', run_id='manual__2023-11-25T14:35:58.205237+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:49:39.495+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Harkiv', run_id='manual__2023-11-25T14:35:58.205237+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:49:39.496+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Odesa', run_id='manual__2023-11-25T14:35:58.205237+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:49:39.496+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Zhmerynka', run_id='manual__2023-11-25T14:35:58.205237+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:49:39.496+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Lviv', run_id='manual__2023-11-25T14:43:48.651156+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:49:39.496+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Kyiv', run_id='manual__2023-11-25T14:43:48.651156+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:49:39.496+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Harkiv', run_id='manual__2023-11-25T14:43:48.651156+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:49:39.496+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Odesa', run_id='manual__2023-11-25T14:43:48.651156+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:49:39.496+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Zhmerynka', run_id='manual__2023-11-25T14:43:48.651156+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:49:39.496+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Lviv', run_id='manual__2023-11-25T14:47:42.106504+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:49:39.496+0200[0m] {[34mscheduler_job_runner.py:[0m685} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Kyiv', run_id='manual__2023-11-25T14:47:42.106504+00:00', try_number=1, map_index=-1)[0m
[[34m2023-11-25T16:49:39.507+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=get_timestamp_Harkiv, run_id=manual__2023-11-25T14:30:52.019411+00:00, map_index=-1, run_start_date=2023-11-25 14:49:15.541399+00:00, run_end_date=2023-11-25 14:49:15.618899+00:00, run_duration=0.0775, state=success, executor_state=success, try_number=1, max_tries=0, job_id=163, pool=default_pool, queue=default, priority_weight=4, operator=PythonOperator, queued_dttm=2023-11-25 14:49:12.404631+00:00, queued_by_job_id=59, pid=10615[0m
[[34m2023-11-25T16:49:39.507+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=get_timestamp_Kyiv, run_id=manual__2023-11-25T14:30:52.019411+00:00, map_index=-1, run_start_date=2023-11-25 14:49:13.957763+00:00, run_end_date=2023-11-25 14:49:14.012608+00:00, run_duration=0.054845, state=success, executor_state=success, try_number=1, max_tries=0, job_id=161, pool=default_pool, queue=default, priority_weight=4, operator=PythonOperator, queued_dttm=2023-11-25 14:49:12.404631+00:00, queued_by_job_id=59, pid=10612[0m
[[34m2023-11-25T16:49:39.508+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=get_timestamp_Odesa, run_id=manual__2023-11-25T14:30:52.019411+00:00, map_index=-1, run_start_date=2023-11-25 14:49:17.030198+00:00, run_end_date=2023-11-25 14:49:17.094406+00:00, run_duration=0.064208, state=success, executor_state=success, try_number=1, max_tries=0, job_id=165, pool=default_pool, queue=default, priority_weight=4, operator=PythonOperator, queued_dttm=2023-11-25 14:49:12.404631+00:00, queued_by_job_id=59, pid=10618[0m
[[34m2023-11-25T16:49:39.508+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=get_timestamp_Zhmerynka, run_id=manual__2023-11-25T14:30:52.019411+00:00, map_index=-1, run_start_date=2023-11-25 14:49:18.837176+00:00, run_end_date=2023-11-25 14:49:19.152853+00:00, run_duration=0.315677, state=success, executor_state=success, try_number=1, max_tries=0, job_id=167, pool=default_pool, queue=default, priority_weight=4, operator=PythonOperator, queued_dttm=2023-11-25 14:49:12.404631+00:00, queued_by_job_id=59, pid=10621[0m
[[34m2023-11-25T16:49:39.508+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=get_timestamp_Kyiv, run_id=manual__2023-11-25T14:47:42.106504+00:00, map_index=-1, run_start_date=2023-11-25 14:49:39.080196+00:00, run_end_date=2023-11-25 14:49:39.229754+00:00, run_duration=0.149558, state=success, executor_state=success, try_number=1, max_tries=0, job_id=180, pool=default_pool, queue=default, priority_weight=4, operator=PythonOperator, queued_dttm=2023-11-25 14:49:12.404631+00:00, queued_by_job_id=59, pid=10656[0m
[[34m2023-11-25T16:49:39.508+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=get_timestamp_Lviv, run_id=manual__2023-11-25T14:47:42.106504+00:00, map_index=-1, run_start_date=2023-11-25 14:49:37.473311+00:00, run_end_date=2023-11-25 14:49:37.582955+00:00, run_duration=0.109644, state=success, executor_state=success, try_number=1, max_tries=0, job_id=179, pool=default_pool, queue=default, priority_weight=4, operator=PythonOperator, queued_dttm=2023-11-25 14:49:12.404631+00:00, queued_by_job_id=59, pid=10654[0m
[[34m2023-11-25T16:49:39.509+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=get_timestamp_Harkiv, run_id=manual__2023-11-25T14:43:48.651156+00:00, map_index=-1, run_start_date=2023-11-25 14:49:32.218048+00:00, run_end_date=2023-11-25 14:49:32.391597+00:00, run_duration=0.173549, state=success, executor_state=success, try_number=1, max_tries=0, job_id=176, pool=default_pool, queue=default, priority_weight=4, operator=PythonOperator, queued_dttm=2023-11-25 14:49:12.404631+00:00, queued_by_job_id=59, pid=10648[0m
[[34m2023-11-25T16:49:39.509+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=get_timestamp_Kyiv, run_id=manual__2023-11-25T14:43:48.651156+00:00, map_index=-1, run_start_date=2023-11-25 14:49:30.496698+00:00, run_end_date=2023-11-25 14:49:30.687049+00:00, run_duration=0.190351, state=success, executor_state=success, try_number=1, max_tries=0, job_id=175, pool=default_pool, queue=default, priority_weight=4, operator=PythonOperator, queued_dttm=2023-11-25 14:49:12.404631+00:00, queued_by_job_id=59, pid=10646[0m
[[34m2023-11-25T16:49:39.509+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=get_timestamp_Lviv, run_id=manual__2023-11-25T14:43:48.651156+00:00, map_index=-1, run_start_date=2023-11-25 14:49:28.906706+00:00, run_end_date=2023-11-25 14:49:29.076973+00:00, run_duration=0.170267, state=success, executor_state=success, try_number=1, max_tries=0, job_id=174, pool=default_pool, queue=default, priority_weight=4, operator=PythonOperator, queued_dttm=2023-11-25 14:49:12.404631+00:00, queued_by_job_id=59, pid=10644[0m
[[34m2023-11-25T16:49:39.509+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=get_timestamp_Odesa, run_id=manual__2023-11-25T14:43:48.651156+00:00, map_index=-1, run_start_date=2023-11-25 14:49:33.871382+00:00, run_end_date=2023-11-25 14:49:34.079452+00:00, run_duration=0.20807, state=success, executor_state=success, try_number=1, max_tries=0, job_id=177, pool=default_pool, queue=default, priority_weight=4, operator=PythonOperator, queued_dttm=2023-11-25 14:49:12.404631+00:00, queued_by_job_id=59, pid=10650[0m
[[34m2023-11-25T16:49:39.509+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=get_timestamp_Zhmerynka, run_id=manual__2023-11-25T14:43:48.651156+00:00, map_index=-1, run_start_date=2023-11-25 14:49:35.735339+00:00, run_end_date=2023-11-25 14:49:35.871849+00:00, run_duration=0.13651, state=success, executor_state=success, try_number=1, max_tries=0, job_id=178, pool=default_pool, queue=default, priority_weight=4, operator=PythonOperator, queued_dttm=2023-11-25 14:49:12.404631+00:00, queued_by_job_id=59, pid=10652[0m
[[34m2023-11-25T16:49:39.509+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=get_timestamp_Harkiv, run_id=manual__2023-11-25T14:35:58.205237+00:00, map_index=-1, run_start_date=2023-11-25 14:49:23.846782+00:00, run_end_date=2023-11-25 14:49:23.981816+00:00, run_duration=0.135034, state=success, executor_state=success, try_number=1, max_tries=0, job_id=171, pool=default_pool, queue=default, priority_weight=4, operator=PythonOperator, queued_dttm=2023-11-25 14:49:12.404631+00:00, queued_by_job_id=59, pid=10638[0m
[[34m2023-11-25T16:49:39.509+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=get_timestamp_Kyiv, run_id=manual__2023-11-25T14:35:58.205237+00:00, map_index=-1, run_start_date=2023-11-25 14:49:22.320457+00:00, run_end_date=2023-11-25 14:49:22.418876+00:00, run_duration=0.098419, state=success, executor_state=success, try_number=1, max_tries=0, job_id=170, pool=default_pool, queue=default, priority_weight=4, operator=PythonOperator, queued_dttm=2023-11-25 14:49:12.404631+00:00, queued_by_job_id=59, pid=10636[0m
[[34m2023-11-25T16:49:39.509+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=get_timestamp_Lviv, run_id=manual__2023-11-25T14:35:58.205237+00:00, map_index=-1, run_start_date=2023-11-25 14:49:20.909812+00:00, run_end_date=2023-11-25 14:49:20.970499+00:00, run_duration=0.060687, state=success, executor_state=success, try_number=1, max_tries=0, job_id=169, pool=default_pool, queue=default, priority_weight=4, operator=PythonOperator, queued_dttm=2023-11-25 14:49:12.404631+00:00, queued_by_job_id=59, pid=10624[0m
[[34m2023-11-25T16:49:39.509+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=get_timestamp_Odesa, run_id=manual__2023-11-25T14:35:58.205237+00:00, map_index=-1, run_start_date=2023-11-25 14:49:25.547259+00:00, run_end_date=2023-11-25 14:49:25.731819+00:00, run_duration=0.18456, state=success, executor_state=success, try_number=1, max_tries=0, job_id=172, pool=default_pool, queue=default, priority_weight=4, operator=PythonOperator, queued_dttm=2023-11-25 14:49:12.404631+00:00, queued_by_job_id=59, pid=10640[0m
[[34m2023-11-25T16:49:39.510+0200[0m] {[34mscheduler_job_runner.py:[0m722} INFO[0m - TaskInstance Finished: dag_id=my_weather_dag, task_id=get_timestamp_Zhmerynka, run_id=manual__2023-11-25T14:35:58.205237+00:00, map_index=-1, run_start_date=2023-11-25 14:49:27.301615+00:00, run_end_date=2023-11-25 14:49:27.385967+00:00, run_duration=0.084352, state=success, executor_state=success, try_number=1, max_tries=0, job_id=173, pool=default_pool, queue=default, priority_weight=4, operator=PythonOperator, queued_dttm=2023-11-25 14:49:12.404631+00:00, queued_by_job_id=59, pid=10642[0m
[[34m2023-11-25T16:49:40.584+0200[0m] {[34mdag.py:[0m3722} INFO[0m - Setting next_dagrun for my_weather_dag to 2023-11-19T00:00:00+00:00, run_after=2023-11-20T00:00:00+00:00[0m
[[34m2023-11-25T16:49:40.654+0200[0m] {[34mscheduler_job_runner.py:[0m413} INFO[0m - 16 tasks up for execution:
	<TaskInstance: my_weather_dag.get_timestamp_Harkiv manual__2023-11-25T14:47:42.106504+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Odesa manual__2023-11-25T14:47:42.106504+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Zhmerynka manual__2023-11-25T14:47:42.106504+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.extract_data_Zhmerynka scheduled__2023-11-18T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.extract_data_Lviv scheduled__2023-11-19T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.extract_data_Kyiv scheduled__2023-11-19T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.extract_data_Harkiv scheduled__2023-11-19T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.extract_data_Odesa scheduled__2023-11-19T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.extract_data_Zhmerynka scheduled__2023-11-19T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.extract_data_Lviv scheduled__2023-11-20T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.extract_data_Kyiv scheduled__2023-11-20T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.extract_data_Harkiv scheduled__2023-11-20T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.extract_data_Odesa scheduled__2023-11-20T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.extract_data_Zhmerynka scheduled__2023-11-20T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.extract_data_Lviv scheduled__2023-11-21T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.extract_data_Kyiv scheduled__2023-11-21T00:00:00+00:00 [scheduled]>[0m
[[34m2023-11-25T16:49:40.654+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 0/16 running and queued tasks[0m
[[34m2023-11-25T16:49:40.655+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 1/16 running and queued tasks[0m
[[34m2023-11-25T16:49:40.655+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 2/16 running and queued tasks[0m
[[34m2023-11-25T16:49:40.655+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 3/16 running and queued tasks[0m
[[34m2023-11-25T16:49:40.655+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 4/16 running and queued tasks[0m
[[34m2023-11-25T16:49:40.655+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 5/16 running and queued tasks[0m
[[34m2023-11-25T16:49:40.655+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 6/16 running and queued tasks[0m
[[34m2023-11-25T16:49:40.655+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 7/16 running and queued tasks[0m
[[34m2023-11-25T16:49:40.655+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 8/16 running and queued tasks[0m
[[34m2023-11-25T16:49:40.655+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 9/16 running and queued tasks[0m
[[34m2023-11-25T16:49:40.655+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 10/16 running and queued tasks[0m
[[34m2023-11-25T16:49:40.655+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 11/16 running and queued tasks[0m
[[34m2023-11-25T16:49:40.655+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 12/16 running and queued tasks[0m
[[34m2023-11-25T16:49:40.655+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 13/16 running and queued tasks[0m
[[34m2023-11-25T16:49:40.656+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 14/16 running and queued tasks[0m
[[34m2023-11-25T16:49:40.656+0200[0m] {[34mscheduler_job_runner.py:[0m476} INFO[0m - DAG my_weather_dag has 15/16 running and queued tasks[0m
[[34m2023-11-25T16:49:40.656+0200[0m] {[34mscheduler_job_runner.py:[0m592} INFO[0m - Setting the following tasks to queued state:
	<TaskInstance: my_weather_dag.get_timestamp_Harkiv manual__2023-11-25T14:47:42.106504+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Odesa manual__2023-11-25T14:47:42.106504+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.get_timestamp_Zhmerynka manual__2023-11-25T14:47:42.106504+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.extract_data_Zhmerynka scheduled__2023-11-18T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.extract_data_Lviv scheduled__2023-11-19T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.extract_data_Kyiv scheduled__2023-11-19T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.extract_data_Harkiv scheduled__2023-11-19T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.extract_data_Odesa scheduled__2023-11-19T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.extract_data_Zhmerynka scheduled__2023-11-19T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.extract_data_Lviv scheduled__2023-11-20T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.extract_data_Kyiv scheduled__2023-11-20T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.extract_data_Harkiv scheduled__2023-11-20T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.extract_data_Odesa scheduled__2023-11-20T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.extract_data_Zhmerynka scheduled__2023-11-20T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.extract_data_Lviv scheduled__2023-11-21T00:00:00+00:00 [scheduled]>
	<TaskInstance: my_weather_dag.extract_data_Kyiv scheduled__2023-11-21T00:00:00+00:00 [scheduled]>[0m
[[34m2023-11-25T16:49:40.659+0200[0m] {[34mtaskinstance.py:[0m1441} WARNING[0m - cannot record scheduled_duration for task get_timestamp_Harkiv because previous state change time has not been saved[0m
[[34m2023-11-25T16:49:40.659+0200[0m] {[34mtaskinstance.py:[0m1441} WARNING[0m - cannot record scheduled_duration for task get_timestamp_Odesa because previous state change time has not been saved[0m
[[34m2023-11-25T16:49:40.659+0200[0m] {[34mtaskinstance.py:[0m1441} WARNING[0m - cannot record scheduled_duration for task get_timestamp_Zhmerynka because previous state change time has not been saved[0m
[[34m2023-11-25T16:49:40.660+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Harkiv', run_id='manual__2023-11-25T14:47:42.106504+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:49:40.660+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Harkiv', 'manual__2023-11-25T14:47:42.106504+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:40.660+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Odesa', run_id='manual__2023-11-25T14:47:42.106504+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:49:40.660+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Odesa', 'manual__2023-11-25T14:47:42.106504+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:40.660+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='get_timestamp_Zhmerynka', run_id='manual__2023-11-25T14:47:42.106504+00:00', try_number=1, map_index=-1) to executor with priority 4 and queue default[0m
[[34m2023-11-25T16:49:40.660+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Zhmerynka', 'manual__2023-11-25T14:47:42.106504+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:40.660+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='extract_data_Zhmerynka', run_id='scheduled__2023-11-18T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 3 and queue default[0m
[[34m2023-11-25T16:49:40.660+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'extract_data_Zhmerynka', 'scheduled__2023-11-18T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:40.660+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='extract_data_Lviv', run_id='scheduled__2023-11-19T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 3 and queue default[0m
[[34m2023-11-25T16:49:40.660+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'extract_data_Lviv', 'scheduled__2023-11-19T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:40.661+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='extract_data_Kyiv', run_id='scheduled__2023-11-19T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 3 and queue default[0m
[[34m2023-11-25T16:49:40.661+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'extract_data_Kyiv', 'scheduled__2023-11-19T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:40.661+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='extract_data_Harkiv', run_id='scheduled__2023-11-19T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 3 and queue default[0m
[[34m2023-11-25T16:49:40.661+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'extract_data_Harkiv', 'scheduled__2023-11-19T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:40.661+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='extract_data_Odesa', run_id='scheduled__2023-11-19T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 3 and queue default[0m
[[34m2023-11-25T16:49:40.661+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'extract_data_Odesa', 'scheduled__2023-11-19T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:40.661+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='extract_data_Zhmerynka', run_id='scheduled__2023-11-19T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 3 and queue default[0m
[[34m2023-11-25T16:49:40.661+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'extract_data_Zhmerynka', 'scheduled__2023-11-19T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:40.661+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='extract_data_Lviv', run_id='scheduled__2023-11-20T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 3 and queue default[0m
[[34m2023-11-25T16:49:40.661+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'extract_data_Lviv', 'scheduled__2023-11-20T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:40.661+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='extract_data_Kyiv', run_id='scheduled__2023-11-20T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 3 and queue default[0m
[[34m2023-11-25T16:49:40.662+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'extract_data_Kyiv', 'scheduled__2023-11-20T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:40.662+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='extract_data_Harkiv', run_id='scheduled__2023-11-20T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 3 and queue default[0m
[[34m2023-11-25T16:49:40.662+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'extract_data_Harkiv', 'scheduled__2023-11-20T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:40.662+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='extract_data_Odesa', run_id='scheduled__2023-11-20T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 3 and queue default[0m
[[34m2023-11-25T16:49:40.662+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'extract_data_Odesa', 'scheduled__2023-11-20T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:40.662+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='extract_data_Zhmerynka', run_id='scheduled__2023-11-20T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 3 and queue default[0m
[[34m2023-11-25T16:49:40.662+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'extract_data_Zhmerynka', 'scheduled__2023-11-20T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:40.662+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='extract_data_Lviv', run_id='scheduled__2023-11-21T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 3 and queue default[0m
[[34m2023-11-25T16:49:40.662+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'extract_data_Lviv', 'scheduled__2023-11-21T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:40.662+0200[0m] {[34mscheduler_job_runner.py:[0m635} INFO[0m - Sending TaskInstanceKey(dag_id='my_weather_dag', task_id='extract_data_Kyiv', run_id='scheduled__2023-11-21T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 3 and queue default[0m
[[34m2023-11-25T16:49:40.662+0200[0m] {[34mbase_executor.py:[0m146} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'my_weather_dag', 'extract_data_Kyiv', 'scheduled__2023-11-21T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:40.664+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Harkiv', 'manual__2023-11-25T14:47:42.106504+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:41.253+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:49:41.503+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:49:41.504+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:41.629+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:41.729+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=manual__2023-11-25T14:47:42.106504+00:00/task_id=get_timestamp_Harkiv permission to 509
[[34m2023-11-25T16:49:41.752+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Harkiv manual__2023-11-25T14:47:42.106504+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:49:42.317+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Odesa', 'manual__2023-11-25T14:47:42.106504+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:42.942+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:49:43.170+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:49:43.171+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:43.302+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:43.349+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=manual__2023-11-25T14:47:42.106504+00:00/task_id=get_timestamp_Odesa permission to 509
[[34m2023-11-25T16:49:43.367+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Odesa manual__2023-11-25T14:47:42.106504+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:49:44.010+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'get_timestamp_Zhmerynka', 'manual__2023-11-25T14:47:42.106504+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:44.753+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:49:44.907+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:49:44.907+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:45.017+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:45.101+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=manual__2023-11-25T14:47:42.106504+00:00/task_id=get_timestamp_Zhmerynka permission to 509
[[34m2023-11-25T16:49:45.116+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.get_timestamp_Zhmerynka manual__2023-11-25T14:47:42.106504+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:49:45.736+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'extract_data_Zhmerynka', 'scheduled__2023-11-18T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:49:46.428+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:49:46.611+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:49:46.611+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:46.709+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:49:46.779+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=scheduled__2023-11-18T00:00:00+00:00/task_id=extract_data_Zhmerynka permission to 509
[[34m2023-11-25T16:49:46.804+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.extract_data_Zhmerynka scheduled__2023-11-18T00:00:00+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:51:17.484+0200[0m] {[34msequential_executor.py:[0m81} ERROR[0m - Failed to execute task Command '['airflow', 'tasks', 'run', 'my_weather_dag', 'extract_data_Zhmerynka', 'scheduled__2023-11-18T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py']' returned non-zero exit status 1..[0m
[[34m2023-11-25T16:51:17.485+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'extract_data_Lviv', 'scheduled__2023-11-19T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:51:18.304+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:51:18.541+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:51:18.541+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:51:18.655+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:51:18.769+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=scheduled__2023-11-19T00:00:00+00:00/task_id=extract_data_Lviv permission to 509
[[34m2023-11-25T16:51:19.007+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.extract_data_Lviv scheduled__2023-11-19T00:00:00+00:00 [queued]> on host macbook-pro-nazar.local[0m
[[34m2023-11-25T16:53:59.869+0200[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'my_weather_dag', 'extract_data_Kyiv', 'scheduled__2023-11-19T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_weather_dag.py'][0m
[[34m2023-11-25T16:54:00.391+0200[0m] {[34mdagbag.py:[0m536} INFO[0m - Filling up the DagBag from /Users/nazar/airflow/dags/my_weather_dag.py[0m
[[34m2023-11-25T16:54:00.534+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m39} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/Users/nazar/.local/share/virtualenvs/hw1-xDjA4hSO/lib/python3.11/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2023-11-25T16:54:00.534+0200[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:54:00.622+0200[0m] {[34mexample_kubernetes_executor.py:[0m38} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2023-11-25T16:54:00.711+0200[0m] {[34mworkday.py:[0m36} WARNING[0m - Could not import pandas. Holidays will not be considered.[0m
Changing /Users/nazar/airflow/logs/dag_id=my_weather_dag/run_id=scheduled__2023-11-19T00:00:00+00:00/task_id=extract_data_Kyiv permission to 509
[[34m2023-11-25T16:54:00.856+0200[0m] {[34mtask_command.py:[0m416} INFO[0m - Running <TaskInstance: my_weather_dag.extract_data_Kyiv scheduled__2023-11-19T00:00:00+00:00 [queued]> on host macbook-pro-nazar.local[0m
